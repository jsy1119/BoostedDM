(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    324695,       7427]
NotebookOptionsPosition[    321507,       7320]
NotebookOutlinePosition[    321964,       7338]
CellTagsIndexPosition[    321921,       7335]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Basic MadEvent Analysis Routines", "Title",
 ExpressionUUID -> "44c0ab54-6d51-4a4d-8c28-8d995a62e3bf"],

Cell[TextData[{
 "by David Curtin (david.r.curtin@gmail.com)\n",
 StyleBox["based on Chameleon Package by Jessie Thaler, Natalia Toro and \
Philip Schuster, 2005 ",
  FontWeight->"Bold"],
 "(http://v1.jthaler.net/olympics/software.html)\n\n"
}], "Text",
 ExpressionUUID -> "2213ea14-b6fc-47e2-832c-66c1ca68ced7"],

Cell["", "Text",
 ExpressionUUID -> "07666f44-688e-43fa-b28b-d166778d2918"],

Cell[CellGroupData[{

Cell["Saving & Loading non-LHS/LHCO files", "Subtitle",
 ExpressionUUID -> "653675cc-080b-4528-99ca-e1e7b7efbb5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SaveIt", "[", 
     RowBox[{"filename_", ",", " ", "expr_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "output", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"output", "=", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"filename", "<>", "\"\<.dat\>\""}], ",", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{"expr", "//", "InputForm"}], "]"}], ",", " ", 
          "\"\<String\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       "ClearMemory", ";", "\[IndentingNewLine]", "output"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SaveIt", "[", "varnamestring_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "output", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"output", "=", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"varnamestring", "<>", "\"\<.dat\>\""}], ",", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"ToExpression", "[", "varnamestring", "]"}], "//", 
            "InputForm"}], "]"}], ",", " ", "\"\<String\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "ClearMemory", ";", "\[IndentingNewLine]", 
       "output"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReadIt", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "output", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"output", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringReplace", "[", 
             RowBox[{"filename", ",", 
              RowBox[{"\"\<.dat\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "<>", 
            "\"\<.dat\>\""}], ",", " ", "\"\<String\>\""}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "ClearMemory", ";", "\[IndentingNewLine]", 
       "output"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "crop", " ", "the", " ", "image", " ", "after", " ", "exporting", " ", 
    "it"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExportCrop", "[", 
     RowBox[{"path_", ",", "toimage_", ",", " ", "borderpixels_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Export", "[", 
        RowBox[{"path", ",", "toimage"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fiximage", " ", "=", " ", 
        RowBox[{"Import", "[", "path", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"imagedim", " ", "=", 
        RowBox[{"ImageDimensions", "[", "fiximage", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fixedimage", " ", "=", " ", 
        RowBox[{"ImageCrop", "[", 
         RowBox[{"ImageTake", "[", 
          RowBox[{"fiximage", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"imagedim", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", "borderpixels"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{"imagedim", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "borderpixels"}]}], 
            "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"path", ",", "fixedimage"}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "crop", " ", "the", " ", "image", " ", "after", " ", "exporting", " ", 
    "it"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExportCrop", "[", 
     RowBox[{
     "path_", ",", "toimage_", ",", " ", "borderpixels1_", ",", 
      "borderpixels2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Export", "[", 
        RowBox[{"path", ",", "toimage"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fiximage", " ", "=", " ", 
        RowBox[{"Import", "[", "path", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"imagedim", " ", "=", 
        RowBox[{"ImageDimensions", "[", "fiximage", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fixedimage", " ", "=", " ", 
        RowBox[{"ImageCrop", "[", 
         RowBox[{"ImageTake", "[", 
          RowBox[{"fiximage", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"imagedim", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", "borderpixels1"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", 
             RowBox[{
              RowBox[{"imagedim", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "borderpixels2"}]}], 
            "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"path", ",", "fixedimage"}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Arrange1Din2Dgrid", "[", 
     RowBox[{"list1D_", ",", "wanteddimensions_"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"list1D", ",", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"\"\<\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"wanteddimensions", "[", 
               RowBox[{"[", "1", "]"}], "]"}], 
              RowBox[{"wanteddimensions", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "-", 
             RowBox[{"Length", "[", "list1D", "]"}]}], "}"}]}], "]"}]}], 
        "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"col", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"row", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"wanteddimensions", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"row", ",", "1", ",", 
        RowBox[{"wanteddimensions", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"col", ",", "1", ",", 
        RowBox[{"wanteddimensions", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImageDumpCrop", "[", "x_", "]"}], ":=", 
    RowBox[{"ExportCrop", "[", 
     RowBox[{
     "\"\<E:\\\\Documents\\\\uni\\\\Research\\\\SUSY gaugino mass \
project\\\\mathematica notebooks\\\\Calculations for our own GKK \
model\\\\image.png\>\"", ",", "x", ",", "5"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImageDump", "[", "x_", "]"}], ":=", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<E:\\\\Documents\\\\uni\\\\Research\\\\SUSY gaugino mass \
project\\\\mathematica notebooks\\\\Calculations for our own GKK \
model\\\\image.png\>\"", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImageDumpCrop", "[", 
    RowBox[{"filename_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"ExportCrop", "[", 
    RowBox[{
     RowBox[{
     "\"\<E:\\\\Documents\\\\uni\\\\Research\\\\SUSY gaugino mass \
project\\\\mathematica notebooks\\\\Calculations for our own GKK \
model\\\\imagesSU1\\\\\>\"", "<>", "filename", "<>", "\"\<.png\>\""}], ",", 
     "x", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ImageDumpCrop", "[", 
    RowBox[{"filename_", ",", "x_", ",", " ", "borderpixels_"}], "]"}], ":=", 
   
   RowBox[{"ExportCrop", "[", 
    RowBox[{
     RowBox[{
     "\"\<E:\\\\Documents\\\\uni\\\\Research\\\\SUSY gaugino mass \
project\\\\mathematica notebooks\\\\Calculations for our own GKK \
model\\\\imagesSU1\\\\\>\"", "<>", "filename", "<>", "\"\<.png\>\""}], ",", 
     "x", ",", "borderpixels"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImageDump", "[", 
     RowBox[{"filename_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<E:\\\\Documents\\\\uni\\\\Research\\\\SUSY gaugino mass \
project\\\\mathematica notebooks\\\\Calculations for our own GKK \
model\\\\imagesSU1\\\\\>\"", "<>", "filename", "<>", "\"\<.png\>\""}], ",", 
      "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "think", " ", "this", " ", "might", " ", "help", " ", "with", 
    " ", "the", " ", "memory", " ", "bloat"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearMemory", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Unprotect", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ClearSystemCache", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 ExpressionUUID -> "191923b4-e049-40aa-bebb-954dff274e5c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Read Events [MGME LHE, pythia LHE, PGS]", "Subtitle",
 ExpressionUUID -> "e32109c4-7aeb-48dd-98f6-a10724886081"],

Cell["read MGME LHE events", "Text",
 ExpressionUUID -> "7453b5ef-1430-43fb-8ffb-22de7845ad5f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "quick", " ", "way", " ", "to", " ", "read", " ", "the", " ", "events"}],
      "..."}], " ", "put", " ", "all", " ", "that", " ", "stuff", " ", "into",
     " ", "a", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ReadEvents", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eventListp", ",", " ", "eventListOutLp", ",", " ", "Nev"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time taken to read events: \>\"", ",", 
         RowBox[{
          RowBox[{"Timing", "[", 
           RowBox[{
            RowBox[{"testp", "=", 
             RowBox[{"Import", "[", 
              RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Timing", "[", 
        RowBox[{
         RowBox[{"eventListp", "=", 
          RowBox[{"ReadME", "[", "testp", "]"}]}], ";"}], " ", "]"}], ";", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "convert", " ", "raw", " ", "data", " ", "into", " ", "chameleon"}], 
         "-", 
         RowBox[{"readable", " ", "form"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Nev", " ", "=", " ", 
        RowBox[{
         RowBox[{"Length", "[", "eventListp", "]"}], "-", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"eventListOutLp", "=", 
        RowBox[{"SetOut", "[", "eventListp", "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"remove", " ", "initial", " ", "particle", " ", 
          RowBox[{"info", " ", "--"}], " ", "boring", " ", "for", " ", "e"}], 
         "+", "e", "-", " ", "collider"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"eventListp", ",", " ", "eventListOutLp", ",", " ", "Nev"}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"new", " ", "version", " ", "of", " ", "this", " ", 
    RowBox[{"function", ":", " ", 
     RowBox[{
     "discards", " ", "dummy", " ", "empty", " ", "entry", " ", "at", " ", 
      "end", " ", "of", " ", "eventslist"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ReadEvents", "[", "filename_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eventListp", ",", " ", "eventListOutLp", ",", "Nevents", ",", 
         "xsection"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Time taken to read events: \>\"", ",", 
          RowBox[{
           RowBox[{"Timing", "[", 
            RowBox[{
             RowBox[{"testp", "=", 
              RowBox[{"Import", "[", 
               RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Timing", "[", 
         RowBox[{
          RowBox[{"eventListp", "=", 
           RowBox[{"ReadME", "[", "testp", "]"}]}], ";"}], " ", "]"}], ";", 
        " ", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "convert", " ", "raw", " ", "data", " ", "into", " ", "chameleon"}],
           "-", 
          RowBox[{"readable", " ", "form"}]}], "*)"}], "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"eventListp", " ", "=", " ", 
           RowBox[{"eventListp", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "eventListp", "]"}], "-", "1"}], 
               ")"}]}], "]"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         RowBox[{"drop", " ", "dummy", " ", "event", " ", "at", " ", "end"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"eventListOutLp", "=", 
         RowBox[{"SetOut", "[", "eventListp", "]"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"remove", " ", "initial", " ", "particle", " ", 
           RowBox[{"info", " ", "--"}], " ", "boring", " ", "for", " ", "e"}],
           "+", "e", "-", " ", "collider"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"MGGIpos", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"testp", ",", 
            RowBox[{"{", "\"\<<MGGenerationInfo>\>\"", "}"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Nevents", ",", "xsection"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"testp", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"MGGIpos", "+", "1"}], ",", "6"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"testp", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"MGGIpos", "+", "2"}], ",", "6"}], 
            "\[RightDoubleBracket]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"(*", 
         RowBox[{
         "extract", " ", "number", " ", "of", " ", "events", " ", "and", " ", 
          "cross", " ", "section", " ", "in", " ", "pb"}], "*)"}], 
        "\[IndentingNewLine]", "ClearMemory", ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "eventListp", ",", " ", "eventListOutLp", ",", "Nevents", ",", 
          "xsection"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ReadME", "[", "rawInput_", " ", "]"}], " ", ":=", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Search", " ", "for", " ", "beginning", " ", "of", " ", "events"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pos", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"rawInput", ",", 
           RowBox[{"{", "\"\<</init>\>\"", "}"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Throw", " ", "away", " ", "crap", " ", "at", " ", "start", " ", 
          "of", " ", "file"}], ",", " ", 
         RowBox[{"combine", " ", "events", " ", "in", " ", 
          RowBox[{"{", "}"}], " ", "array", " ", "and", " ", "remove", " ", 
          "the", " ", "XML", " ", "commands", " ", "and", " ", "compulsory", 
          " ", "eventinfo"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Split", "[", 
          RowBox[{
           RowBox[{"Drop", "[", " ", 
            RowBox[{"rawInput", ",", " ", "pos"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "=!=", 
             RowBox[{"{", "\"\<</event>\>\"", "}"}]}], "&"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", "_", "}"}], "|", 
          RowBox[{"{", 
           RowBox[{"_", ",", "_"}], "}"}], "|", 
          RowBox[{"{", 
           RowBox[{"_", ",", "_", ",", "_"}], "}"}], "|", 
          RowBox[{"{", 
           RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}], "|", " ", 
          "eventInfo"}], ",", "2"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 ExpressionUUID -> "4dac0906-8da0-4519-988c-7ee504966a2e"],

Cell["read pythia LHE events", "Text",
 ExpressionUUID -> "65ab4299-ee87-4b11-bf8e-251962f03a31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ReadEventsPythia", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eventListp", ",", " ", "eventListOutLp"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Time taken to read events: \>\"", ",", 
         RowBox[{
          RowBox[{"Timing", "[", 
           RowBox[{
            RowBox[{"testp", "=", 
             RowBox[{"Import", "[", 
              RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}]}], ";"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Timing", "[", 
        RowBox[{
         RowBox[{"eventListp", "=", 
          RowBox[{"ReadMEPythia", "[", "testp", "]"}]}], ";"}], " ", "]"}], 
       ";", " ", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "convert", " ", "raw", " ", "data", " ", "into", " ", "chameleon"}], 
         "-", 
         RowBox[{"readable", " ", "form"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eventListp", " ", "=", " ", 
        RowBox[{"eventListp", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "eventListp", "]"}], "-", "1"}], ")"}]}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"drop", " ", "dummy", " ", "event", " ", "at", " ", "end"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eventListOutLp", "=", 
        RowBox[{"SetOut", "[", "eventListp", "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"remove", " ", "initial", " ", "particle", " ", 
          RowBox[{"info", " ", "--"}], " ", "boring", " ", "for", " ", "e"}], 
         "+", "e", "-", " ", "collider"}], "*)"}], "\[IndentingNewLine]", 
       "ClearMemory", ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"eventListp", ",", " ", "eventListOutLp"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReadMEPythia", "[", "rawInput_", " ", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Search", " ", "for", " ", "beginning", " ", "of", " ", "events"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"rawInput", ",", 
         RowBox[{"{", "\"\<<event>\>\"", "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Throw", " ", "away", " ", "crap", " ", "at", " ", "start", " ", "of", 
        " ", "file"}], ",", " ", 
       RowBox[{"combine", " ", "events", " ", "in", " ", 
        RowBox[{"{", "}"}], " ", "array", " ", "and", " ", "remove", " ", 
        "the", " ", "XML", " ", "commands", " ", "and", " ", "compulsory", 
        " ", "eventinfo"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"pythiaout", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Split", "[", 
         RowBox[{
          RowBox[{"Drop", "[", " ", 
           RowBox[{"rawInput", ",", " ", "pos"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "=!=", 
            RowBox[{"{", "\"\<</event>\>\"", "}"}]}], "&"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<<event>\>\"", "}"}], "|", 
         RowBox[{"{", "\"\<</LesHouchesEvents>\>\"", "}"}], "|", " ", 
         RowBox[{"{", "\"\<</event>\>\"", "}"}], " ", "|", " ", "eventInfo"}],
         ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", "ClearMemory", ";", 
     "\[IndentingNewLine]", "pythiaout"}], "\[IndentingNewLine]", ")"}]}], 
  ";"}]}], "Input",
 ExpressionUUID -> "e45e8a3f-807d-437f-8bf2-adac67c03990"],

Cell[TextData[{
 "\n",
 StyleBox["Reading PGS events into the same format we use for MGME events\n",
  FontWeight->"Bold"],
 "\nThe below code is also used in the automatic .m scripts to convert lots \
of lhe/lhco files to .dat files"
}], "Text",
 ExpressionUUID -> "71bbad8a-0263-4bfb-b7ad-94de28b91037"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "give", " ", "this", " ", "function", " ", "the", " ", "filename", " ", 
    "of", " ", "a", " ", "PGS", " ", "output", " ", "file", " ", "and", " ", 
    "it", " ", "gives", " ", "you", " ", "an", " ", "eventlist", " ", "in", 
    " ", "the", " ", "same", " ", "format", " ", "as", " ", "MGME", " ", 
    "output"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReadPGSEventsAsMGME", "[", "filename_", "]"}], ":=", 
    RowBox[{
     RowBox[{"ReadPGSEventFile", "[", "filename", "]"}], "//", 
     "ConvertPGSeventstoMGMEevents"}]}], ";"}]}]], "Input",
 ExpressionUUID -> "e29c2d96-cd66-420c-a65a-f8f041435617"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "give", " ", "this", " ", "function", " ", "the", " ", "filename", " ", 
    "of", " ", "the", " ", "PGS", " ", "output", " ", "file", " ", "and", " ", 
    RowBox[{"it", "'"}], "ll", " ", "give", " ", "you", " ", "a", " ", "list",
     " ", "of", " ", 
    RowBox[{"events", ".", " ", "Use"}], " ", "PGSEventPrint", " ", "to", " ",
     "show", " ", "a", " ", "single", " ", "event"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ReadPGSEventFile", "[", "filename_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "SplitData", ",", "PGSreadfile", ",", "found", ",", "entry", ",", 
         "entryTableHeading", ",", "numevents", ",", "PGSeventlist"}], "}"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"SplitData", "[", "rawObjList_", "]"}], ":=", 
         RowBox[{"Split", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"rawObjList", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"NumberQ", "[", 
                RowBox[{"rawObjList", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "0", ",",
                "1"}], "]"}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"Less", "[", 
             RowBox[{
              RowBox[{"First", "[", "#1", "]"}], ",", 
              RowBox[{"First", "[", "#2", "]"}]}], "]"}], "&"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"PGSreadfile", "=", 
         RowBox[{"SplitData", "[", 
          RowBox[{"Import", "[", 
           RowBox[{"filename", ",", "\"\<Table\>\""}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "find", " ", "the", " ", "entry", " ", "in", " ", "the", " ", 
           "read", " ", "tabel", " ", "where", " ", "the", " ", "table", " ", 
           "starts"}], ",", " ", 
          RowBox[{
           RowBox[{"i", ".", "e", ".", " ", "table"}], " ", 
           RowBox[{"header", ".", " ", "After"}], " ", "that", " ", 
           RowBox[{"it", "'"}], "s", " ", "normal", " ", "PGS", " ", 
           RowBox[{"events", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"found", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"entry", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"found", "\[Equal]", "False"}], "&&", 
           RowBox[{"entry", "<", "  ", 
            RowBox[{"Length", "[", "PGSreadfile", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"entry", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"PGSreadfile", "[", 
               RowBox[{"[", "entry", "]"}], "]"}], "==", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                "\"\<#\>\"", ",", "\"\<typ\>\"", ",", "\"\<eta\>\"", ",", 
                 "\"\<phi\>\"", ",", "\"\<pt\>\"", ",", "\"\<jmas\>\"", ",", 
                 "\"\<ntrk\>\"", ",", "\"\<btag\>\"", ",", "\"\<had/em\>\"", 
                 ",", "\"\<dum1\>\"", ",", "\"\<dum2\>\""}], "}"}], "}"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"found", "=", "True"}], ";"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"entry", " ", "\[GreaterEqual]", "  ", 
           RowBox[{"Length", "[", "PGSreadfile", "]"}]}], ",", " ", 
          RowBox[{"entry", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"entryTableHeading", " ", "=", " ", "entry"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "get", " ", "total", " ", "number", " ", "of", " ", "events"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"numevents", " ", "=", " ", 
         RowBox[{
          RowBox[{"Length", "[", "PGSreadfile", "]"}], "-", 
          "entryTableHeading"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"store", " ", "list", " ", "of", " ", "PGS", " ", "events"}],
          "*)"}], "\[IndentingNewLine]", 
        RowBox[{"PGSeventlist", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"PGSreadfile", "[", 
              RowBox[{"[", 
               RowBox[{"entryTableHeading", "+", "eventindex"}], "]"}], "]"}],
              ",", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"eventindex", ",", "1", ",", "numevents"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "ClearMemory", ";", 
        "\[IndentingNewLine]", "PGSeventlist"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PGSEventPrint", "[", "PGSevent_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "\"\<#\>\"", ",", "\"\<typ\>\"", ",", "\"\<eta\>\"", ",", 
            "\"\<phi\>\"", ",", "\"\<pt\>\"", ",", "\"\<jmas\>\"", ",", 
            "\"\<ntrk\>\"", ",", "\"\<btag\>\"", ",", "\"\<had/em\>\"", ",", 
            "\"\<dum1\>\"", ",", "\"\<dum2\>\""}], "}"}], "}"}], ",", " ", 
         "PGSevent"}], "]"}], "//", "MatrixForm"}], "//", "Print"}]}], 
    ";"}]}]}]], "Input",
 ExpressionUUID -> "9429f1ba-eae9-4b58-8f49-1bf131e7e83b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "give", " ", "this", " ", "function", " ", "a", " ", "list", " ", "of", 
    " ", "PGS", " ", "events", " ", "that", " ", "have", " ", "been", " ", 
    "read", " ", "by", " ", "ReadPGSEventFile", " ", "and", " ", "it", " ", 
    "outputs", " ", "a", " ", "list", " ", "of", " ", "events", " ", "that", 
    " ", "is", " ", "in", " ", "the", " ", "same", " ", "format", " ", "as", 
    " ", "the", " ", "MGME", " ", "events"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ConvertPGSeventstoMGMEevents", "[", "PGSevents_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "output", "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"PGSevents", "[", 
              RowBox[{"[", "eventindex", "]"}], "]"}], "[", 
             RowBox[{"[", "particleindex", "]"}], "]"}], "//", 
            "ConvertPGSparticletoMGMEparticle"}], ",", 
           RowBox[{"{", 
            RowBox[{"eventindex", ",", "1", ",", 
             RowBox[{"Length", "[", "PGSevents", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"particleindex", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"PGSevents", "[", 
               RowBox[{"[", "eventindex", "]"}], "]"}], "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ClearMemory", "[", "]"}], ";", "\[IndentingNewLine]", 
        "output"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "use", " ", "these", " ", "pointers", " ", "to", " ", "access", " ", 
     "entries", " ", "of", " ", "a", " ", "single", " ", "PGS", " ", 
     "event"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"typePGSINDEX", " ", "=", " ", "2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"etaPGSINDEX", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phiPGSINDEX", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ptPGSINDEX", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"jmasPGSINDEX", " ", "=", " ", "6"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ntrkPGSINDEX", "=", "7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"btagPGSINDEX", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConvertPGSparticletoMGMEparticle", "[", "PGSparticle_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "currenttype", ",", "currenteta", ",", "currentphi", ",", "currentpt",
          ",", "currentjmas", ",", "currentntrk", ",", "currentbtag", ",", 
         "currentpx", ",", "currentpy", ",", "currenttheta", ",", "currentpz",
          ",", "currentPID"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "load", " ", "parameters", " ", "of", " ", "this", " ", "particle", 
         " ", "into"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"currenttype", " ", "=", " ", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "typePGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currenteta", " ", "=", " ", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "etaPGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currentphi", " ", "=", " ", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "phiPGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currentpt", " ", "=", " ", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "ptPGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currentjmas", " ", "=", " ", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "jmasPGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currentntrk", " ", "=", " ", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "ntrkPGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currentbtag", "=", 
         RowBox[{"PGSparticle", "[", 
          RowBox[{"[", "btagPGSINDEX", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"currentpx", " ", "=", " ", 
         RowBox[{"currentpt", " ", 
          RowBox[{"Cos", "[", "currentphi", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"currentpy", " ", "=", " ", 
         RowBox[{"currentpt", " ", 
          RowBox[{"Sin", "[", "currentphi", "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"currenttheta", " ", "=", " ", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", "currenteta"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"currentpz", " ", "=", " ", 
         FractionBox["currentpt", 
          RowBox[{"Tan", "[", "currenttheta", "]"}]]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "note", " ", "we", " ", "are", " ", "discarding", " ", "some", " ", 
           "\[Tau]", " ", "information", " ", 
           RowBox[{"here", " ", "--"}], " ", "namely"}], ",", " ", 
          RowBox[{
          "whether", " ", "it", " ", "decayed", " ", "via", " ", "three", " ",
            "prongs", " ", 
           RowBox[{"(", 
            RowBox[{"ntrk", " ", "=", " ", 
             RowBox[{"\[PlusMinus]", " ", "3"}]}], ")"}], " ", "or", " ", 
           "one", " ", "prong", " ", 
           RowBox[{"(", 
            RowBox[{"ntrk", " ", "=", " ", 
             RowBox[{"\[PlusMinus]", " ", "1"}]}], ")"}]}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "we", " ", "are", " ", "also", " ", "discarding", " ", "whether", 
          " ", "the", " ", "tagged", " ", "b", " ", "was", " ", "tight", " ", 
          
          RowBox[{"(", 
           RowBox[{"btag", " ", "=", " ", "2"}], ")"}], " ", "or", " ", 
          "loose", " ", 
          RowBox[{"(", 
           RowBox[{"btag", " ", "=", " ", "1"}], ")"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", "photon", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"currenttype", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", "22"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"e", "+"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "1"}], "&&", 
           RowBox[{"currentntrk", "\[Equal]", "1"}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", 
           RowBox[{"-", "11"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"e", "-"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "1"}], "&&", 
           RowBox[{"currentntrk", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", "11"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Mu]", "+"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "2"}], "&&", 
           RowBox[{"currentntrk", "\[Equal]", "1"}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", 
           RowBox[{"-", "13"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Mu]", "-"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "2"}], "&&", 
           RowBox[{"currentntrk", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", "13"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Tau]", "+"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "3"}], "&&", 
           RowBox[{"currentntrk", ">", "0"}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", 
           RowBox[{"-", "15"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Tau]", "-"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "3"}], "&&", 
           RowBox[{"currentntrk", "<", "0"}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", "15"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "b", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", "\[Equal]", "4"}], "&&", 
           RowBox[{"currentbtag", ">", "0"}]}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", "5"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"other", " ", 
            RowBox[{"jet", ":", " ", 
             RowBox[{"label", " ", "as", " ", "gluon"}]}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currenttype", " ", "\[Equal]", "4"}], " ", "&&", " ", 
           RowBox[{"currentbtag", "\[Equal]", "0"}]}], ",", " ", 
          RowBox[{"currentPID", "=", " ", "21"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"(*", 
           RowBox[{"MET", ":", " ", 
            RowBox[{
             RowBox[{"label", " ", "as", " ", "electron"}], "-", 
             "neutrino"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"currenttype", "\[Equal]", "6"}], ",", " ", 
          RowBox[{"currentPID", " ", "=", " ", "12"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "currentPID", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
          "currentpx", ",", "currentpy", ",", "currentpz", ",", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["currentpx", "2"], "+", 
            SuperscriptBox["currentpy", "2"], "+", 
            SuperscriptBox["currentpz", "2"]}]], ",", "currentjmas", ",", "0",
           ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 ExpressionUUID -> "7772e36b-1b4e-4cf7-b0e5-327e3c9221a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReadPGSEventFileAsMGME", "[", "filename_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temp", "=", 
       RowBox[{"ReadPGSEventFile", "[", "filename", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ConvertPGSparticletoMGMEparticle", "[", "temp", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "65efc2fd-20a6-4034-8ec0-3fb25c4448f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["EventPrint", "Subtitle",
 ExpressionUUID -> "37c372d6-69bf-4741-b475-1304f0a89a72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "MAKE", " ", "SURE", " ", "TO", " ", "UPDATE", " ", "THIS", " ", "IF", " ",
     "YOU", " ", "HAVE", " ", "A", " ", "NEW", " ", "INVISIBLE", " ", 
    "PARTICLE"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"invisiblelist", "=", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     RowBox[{"-", "12"}], ",", "14", ",", 
     RowBox[{"-", "14"}], ",", "16", ",", 
     RowBox[{"-", "16"}], ",", "1000022"}], "}"}]}]}]], "Input",
 ExpressionUUID -> "61a223d8-ab6b-4bf7-a73b-a4ea79be044d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", 
   RowBox[{"-", "12"}], ",", "14", ",", 
   RowBox[{"-", "14"}], ",", "16", ",", 
   RowBox[{"-", "16"}], ",", "1000022"}], "}"}]], "Output",
 ExpressionUUID -> "ec1fb8b4-475c-4510-94f1-614d75d13c8b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Based", " ", "on", " ", "the", " ", "Chameleon", " ", "package", " ", 
     "by", " ", "Philip", " ", "Shuster"}], ",", " ", 
    RowBox[{"Jesse", " ", "Thaler"}], ",", " ", 
    RowBox[{"Natalia", " ", "Toro"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Modified", " ", "by", " ", "Maxim", " ", "Perelstein", " ", "and", " ", 
     "Andi", " ", "Weiler"}], ",", " ", 
    RowBox[{"2008", "-", "09"}]}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "format", " ", "of", " ", "the", " ", "compulsory", " ", "event", " ", 
    "vector"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eventInfo", "=", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"particle", ",", "finout"}], "]"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PDG", " ", "numbers", " ", "see", " ", 
      RowBox[{"e", ".", "g", ".", " ", 
       RowBox[{"http", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"home", ".", "fnal", ".", "gov"}], "/", 
          RowBox[{"~", "maeshima"}]}], "/", "alignment"}], "/", "ORCA"}], "/",
        "PYTHIA_particle"}], 
      RowBox[{"_codes", ".", "ps"}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}], ",", "1", ",", 
      RowBox[{"-", "1"}], ",", "3", ",", 
      RowBox[{"-", "3"}], ",", "4", ",", 
      RowBox[{"-", "4"}], ",", "5", ",", 
      RowBox[{"-", "5"}], ",", "6", ",", 
      RowBox[{"-", "6"}], ",", "21"}], "}"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDu", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDubar", " ", "=", " ", 
     RowBox[{"-", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDd", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDdbar", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDs", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDsbar", " ", "=", " ", 
     RowBox[{"-", "3"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDc", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDcbar", " ", "=", " ", 
     RowBox[{"-", "4"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDb", " ", "=", " ", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDbbar", " ", "=", " ", 
     RowBox[{"-", "5"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDt", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDtbar", " ", "=", " ", 
     RowBox[{"-", "6"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDeminus", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"PIDeplus", " ", "=", " ", 
     RowBox[{"-", "11"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDnue", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDnuebar", " ", "=", " ", 
     RowBox[{"-", "12"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDmuminus", " ", "=", " ", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDmuplus", " ", "=", 
     RowBox[{"-", "13"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDnumu", " ", "=", " ", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDnumubar", " ", "=", " ", 
     RowBox[{"-", "14"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDtauminus", " ", "=", " ", "15"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDtauplus", " ", "=", " ", 
     RowBox[{"-", "15"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDnutau", " ", "=", " ", "16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDnutaubar", " ", "=", " ", 
     RowBox[{"-", "16"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDgluon", " ", "=", " ", "21"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDphoton", " ", "=", " ", "22"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"PIDZ", " ", "=", " ", "23"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDWplus", " ", "=", " ", "24"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDWminus", " ", "=", " ", 
     RowBox[{"-", "24"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PIDh", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "2", "]"}], " ", "=", "\"\<u\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "2"}], "]"}], " ", "=", "\"\<uBar\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "1", "]"}], " ", "=", "\"\<d\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "1"}], "]"}], " ", "=", "\"\<dBar\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "3", "]"}], " ", "=", "\"\<s\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "3"}], "]"}], " ", "=", "\"\<sBar\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "4", "]"}], " ", "=", "\"\<c\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "4"}], "]"}], " ", "=", "\"\<cBar\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "5", "]"}], " ", "=", "\"\<b\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "5"}], "]"}], " ", "=", "\"\<bBar\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "6", "]"}], " ", "=", "\"\<t\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "6"}], "]"}], " ", "=", "\"\<tBar\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "11", "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[\(e\), \(-\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "11"}], "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[\(e\), \(+\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "12", "]"}], " ", "=", 
     "\"\<\!\(\*SubscriptBox[\(\[Vee]\), \(e\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "12"}], "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Vee]\), \(e\)], \
\(c\)]\)\>\""}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "13", "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(-\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "13"}], "]"}], "=", 
     "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(+\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "14", "]"}], " ", "=", 
     "\"\<\!\(\*SubscriptBox[\(\[Vee]\), \(\[Mu]\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "14"}], "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Vee]\), \(\[Mu]\)], \
\(c\)]\)\>\""}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "15", "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \(-\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "15"}], "]"}], "=", 
     "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \(+\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "16", "]"}], " ", "=", 
     "\"\<\!\(\*SubscriptBox[\(\[Vee]\), \(\[Tau]\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "16"}], "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Vee]\), \(\[Tau]\)], \(c\)]\)\
\>\""}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "21", "]"}], " ", "=", "\"\<gluon\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "22", "]"}], " ", "=", " ", 
     "\"\<\[Gamma]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "23", "]"}], " ", "=", " ", "\"\<Z\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "24", "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[\(W\), \(+\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "24"}], "]"}], " ", "=", " ", 
     "\"\<\!\(\*SuperscriptBox[\(W\), \(-\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "1000006", "]"}], " ", "=", 
     "\"\<\!\(\*SubscriptBox[OverscriptBox[\(t\), \(~\)], \(1\)]\)\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "1000006"}], "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(t\), \(~\)], \
\(1\)], \(*\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "1000022", "]"}], " ", "=", 
     "\"\<\!\(\*SuperscriptBox[SubscriptBox[OverscriptBox[\(\[Chi]\), \(~\)], \
\(1\)], \(0\)]\)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "1000021", "]"}], " ", "=", " ", 
     "\"\<\!\(\*OverscriptBox[\(g\), \(~\)]\)\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "1000005", "]"}], "=", 
     "\"\<\!\(\*SubscriptBox[OverscriptBox[\(b\), \(~\)], \(1\)]\)\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "1000005"}], "]"}], "=", 
     "\"\<\!\(\*SubscriptBox[OverscriptBox[\(b\), \(~\)], \(1\)]\)*\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "2000001", "]"}], "=", 
     "\"\<\!\(\*OverscriptBox[SubscriptBox[\(d\), \(R\)], \(~\)]\)\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "2000001"}], "]"}], "=", 
     "\"\<\!\(\*OverscriptBox[SubscriptBox[\(d\), \(R\)], \(~\)]\)*\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "2000002", "]"}], "=", 
     "\"\<\!\(\*OverscriptBox[SubscriptBox[\(u\), \(R\)], \(~\)]\)\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", 
      RowBox[{"-", "2000002"}], "]"}], "=", 
     "\"\<\!\(\*OverscriptBox[SubscriptBox[\(u\), \(R\)], \(~\)]\)*\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "25", "]"}], " ", "=", " ", "\"\<h\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "for", " ", "exotic", " ", "higgs", " ", "decay", " ", "analysis", " ", 
     "using", " ", 
     RowBox[{"Prerit", "'"}], "s", "  ", "omdel"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "45", "]"}], " ", "=", " ", "\"\<a\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"particle", "[", "46", "]"}], " ", "=", " ", "\"\<a'\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"finout", "[", 
      RowBox[{"-", "1"}], "]"}], " ", "=", " ", "\"\<in\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"finout", "[", "1", "]"}], " ", "=", " ", "\"\<out\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"finout", "[", "2", "]"}], "  ", "=", " ", "\"\<decayed\>\""}], 
    ";"}], "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventPrint", "[", "event_", "]"}], ":=", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[Equal]", " ", "13"}],
        ",", " ", "\[IndentingNewLine]", 
       RowBox[{"EventPrintNoTag", "[", "event", "]"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[Equal]", " ", "14"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"EventPrintTag", "[", "event", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[Equal]", "15"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"EventPrintRecon", "[", "event", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "16"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EventPrintComb", "[", "event", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", "17"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EventPrintMCRecon", "[", "event", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventPrintNoTag", "[", " ", "event_", " ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "printevent", ",", " ", "numlist", ",", " ", "x1", ",", "x2", ",", 
         "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", 
         "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", " ", 
         "x14", ",", "x15", ",", "x16", ",", "x17", ",", "x18", ",", "x19"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"printevent", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"pid", ",", " ", 
              RowBox[{"in", "/", "out"}], ",", "mother1", ",", "mother2", ",",
               "color1", ",", "color2", ",", " ", "px", ",", "py", ",", "pz", 
              ",", "p0", ",", "mass", ",", "6", ",", "hel"}], "}"}], "}"}], 
           ",", " ", 
           RowBox[{"(", 
            RowBox[{"event", "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
                "x6_", ",", "x7_", ",", "x8_", ",", "x9_", ",", "x10_", ",", 
                "x11_", ",", "x12_", ",", "x13_"}], "}"}], "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"particle", "[", "x1", "]"}], ",", 
                RowBox[{"finout", "[", "x2", "]"}], ",", "x3", ",", "x4", ",",
                 "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10",
                 ",", "x11", ",", "x12", ",", "x13"}], "}"}]}]}], ")"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numlist", " ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<#\>\"", "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "event", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "numlist", "}"}], ",", 
             RowBox[{"Transpose", "[", "printevent", "]"}]}], "]"}], "//", 
           "Transpose"}], "//", "MatrixForm"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventPrintTag", "[", " ", "event_", " ", "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "printevent", ",", " ", "numlist", ",", " ", "x1", ",", "x2", ",", 
         "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", 
         "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", " ", 
         "x14", ",", "x15", ",", "x16", ",", "x17", ",", "x18", ",", "x19"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"printevent", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"pid", ",", " ", 
              RowBox[{"in", "/", "out"}], ",", "mother1", ",", "mother2", ",",
               "color1", ",", "color2", ",", " ", "px", ",", "py", ",", "pz", 
              ",", "p0", ",", "mass", ",", "6", ",", "hel", ",", " ", 
              "\"\<tag\>\""}], "}"}], "}"}], ",", " ", 
           RowBox[{"(", 
            RowBox[{"event", "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
                "x6_", ",", "x7_", ",", "x8_", ",", "x9_", ",", "x10_", ",", 
                "x11_", ",", "x12_", ",", "x13_", ",", " ", "x14_"}], "}"}], "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"particle", "[", "x1", "]"}], ",", 
                RowBox[{"finout", "[", "x2", "]"}], ",", "x3", ",", "x4", ",",
                 "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10",
                 ",", "x11", ",", "x12", ",", "x13", ",", 
                RowBox[{"tagname", "[", "x14", "]"}]}], "}"}]}]}], ")"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numlist", " ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<#\>\"", "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "event", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "numlist", "}"}], ",", 
             RowBox[{"Transpose", "[", "printevent", "]"}]}], "]"}], "//", 
           "Transpose"}], "//", "MatrixForm"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventPrintRecon", "[", " ", "event_", " ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "printevent", ",", " ", "numlist", ",", " ", "x1", ",", "x2", ",", 
         "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", 
         "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", " ", 
         "x14", ",", "x15", ",", "x16", ",", "x17", ",", "x18", ",", "x19"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"printevent", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"pid", ",", " ", 
              RowBox[{"in", "/", "out"}], ",", "mother1", ",", "mother2", ",",
               "color1", ",", "color2", ",", " ", "px", ",", "py", ",", "pz", 
              ",", "p0", ",", "mass", ",", "6", ",", "hel", ",", " ", 
              "\"\<tag\>\"", ",", " ", "\"\<recon\>\""}], "}"}], "}"}], ",", 
           " ", 
           RowBox[{"(", 
            RowBox[{"event", "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
                "x6_", ",", "x7_", ",", "x8_", ",", "x9_", ",", "x10_", ",", 
                "x11_", ",", "x12_", ",", "x13_", ",", " ", "x14_", ",", 
                "x15_"}], "}"}], "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"particle", "[", "x1", "]"}], ",", 
                RowBox[{"finout", "[", "x2", "]"}], ",", "x3", ",", "x4", ",",
                 "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10",
                 ",", "x11", ",", "x12", ",", "x13", ",", 
                RowBox[{"tagname", "[", "x14", "]"}], ",", "x15"}], "}"}]}]}],
             ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numlist", " ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<#\>\"", "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "event", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "numlist", "}"}], ",", 
             RowBox[{"Transpose", "[", "printevent", "]"}]}], "]"}], "//", 
           "Transpose"}], "//", "MatrixForm"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventPrintComb", "[", " ", "event_", " ", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "printevent", ",", " ", "numlist", ",", " ", "x1", ",", "x2", ",", 
         "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", 
         "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", " ", 
         "x14", ",", "x15", ",", "x16", ",", "x17", ",", "x18", ",", "x19"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"printevent", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"pid", ",", " ", 
              RowBox[{"in", "/", "out"}], ",", "mother1", ",", "mother2", ",",
               "color1", ",", "color2", ",", " ", "px", ",", "py", ",", "pz", 
              ",", "p0", ",", "mass", ",", "6", ",", "hel", ",", " ", 
              "\"\<tag\>\"", ",", " ", "\"\<recon\>\"", ",", " ", 
              "\"\<comb\>\""}], "}"}], "}"}], ",", " ", 
           RowBox[{"(", 
            RowBox[{"event", "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
                "x6_", ",", "x7_", ",", "x8_", ",", "x9_", ",", "x10_", ",", 
                "x11_", ",", "x12_", ",", "x13_", ",", " ", "x14_", ",", 
                "x15_", ",", "x16_"}], "}"}], "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"particle", "[", "x1", "]"}], ",", 
                RowBox[{"finout", "[", "x2", "]"}], ",", "x3", ",", "x4", ",",
                 "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10",
                 ",", "x11", ",", "x12", ",", "x13", ",", 
                RowBox[{"tagname", "[", "x14", "]"}], ",", "x15", ",", 
                "x16"}], "}"}]}]}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numlist", " ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<#\>\"", "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "event", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "numlist", "}"}], ",", 
             RowBox[{"Transpose", "[", "printevent", "]"}]}], "]"}], "//", 
           "Transpose"}], "//", "MatrixForm"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventPrintMCRecon", "[", " ", "event_", " ", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "printevent", ",", " ", "numlist", ",", " ", "x1", ",", "x2", ",", 
         "x3", ",", "x4", ",", "x5", ",", "x6", ",", "x7", ",", "x8", ",", 
         "x9", ",", "x10", ",", "x11", ",", "x12", ",", "x13", ",", " ", 
         "x14", ",", "x15", ",", "x16", ",", "x17", ",", "x18", ",", "x19"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"printevent", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"pid", ",", " ", 
              RowBox[{"in", "/", "out"}], ",", "mother1", ",", "mother2", ",",
               "color1", ",", "color2", ",", " ", "px", ",", "py", ",", "pz", 
              ",", "p0", ",", "mass", ",", "6", ",", "hel", ",", " ", 
              "\"\<tag\>\"", ",", " ", "\"\<recon\>\"", ",", " ", 
              "\"\<comb\>\"", ",", " ", "\"\<MCrecon\>\""}], "}"}], "}"}], 
           ",", " ", 
           RowBox[{"(", 
            RowBox[{"event", "/.", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "x1_", ",", "x2_", ",", "x3_", ",", "x4_", ",", "x5_", ",", 
                "x6_", ",", "x7_", ",", "x8_", ",", "x9_", ",", "x10_", ",", 
                "x11_", ",", "x12_", ",", "x13_", ",", " ", "x14_", ",", 
                "x15_", ",", "x16_", ",", " ", "x17_"}], "}"}], "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"particle", "[", "x1", "]"}], ",", 
                RowBox[{"finout", "[", "x2", "]"}], ",", "x3", ",", "x4", ",",
                 "x5", ",", "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10",
                 ",", "x11", ",", "x12", ",", "x13", ",", 
                RowBox[{"tagname", "[", "x14", "]"}], ",", "x15", ",", "x16", 
                ",", " ", "x17"}], "}"}]}]}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numlist", " ", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<#\>\"", "}"}], ",", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "event", "]"}]}], "}"}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "numlist", "}"}], ",", 
             RowBox[{"Transpose", "[", "printevent", "]"}]}], "]"}], "//", 
           "Transpose"}], "//", "MatrixForm"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 ExpressionUUID -> "7b307c5f-28ea-433e-9f23-07f767ab4531"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histograming", "Subtitle",
 ExpressionUUID -> "c8a2639d-a12f-403e-987d-64da19b9b822"],

Cell[CellGroupData[{

Cell["basic 1D histograms", "Subsection",
 ExpressionUUID -> "02ceecdc-35ee-481f-8652-0dcb00b142d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RescaledHistogram", "[", 
     RowBox[{
     "data_", ",", " ", "xsecmultiplier_", ",", "binspec_", ",", 
      "options___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "bla", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bla", "=", 
        RowBox[{"HistogramList", "[", 
         RowBox[{"data", ",", "binspec"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"bla", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", 
            RowBox[{"xsecmultiplier", " ", 
             RowBox[{"bla", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
         "options"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RescaledLogHistogram", "[", 
     RowBox[{
     "data_", ",", " ", "xsecmultiplier_", ",", "binspec_", ",", 
      "options___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "bla", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bla", "=", 
        RowBox[{"HistogramList", "[", 
         RowBox[{"data", ",", "binspec"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"bla", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", 
            RowBox[{"xsecmultiplier", " ", 
             RowBox[{"bla", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
         "options"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RescaledLogHistogramWithError", "[", 
     RowBox[{
     "data_", ",", " ", "xsecmultiplier_", ",", "binspec_", ",", 
      "options___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bla", ",", "upbla", ",", "downbla"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bla", "=", 
        RowBox[{"HistogramList", "[", 
         RowBox[{"data", ",", "binspec"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bla", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"bla", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", " ", 
           RowBox[{"bla", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"upbla", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{"Max", "[", 
              RowBox[{"1", ",", 
               SqrtBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]]}], "]"}]}]}], "}"}], "&"}], "/@",
          "bla"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"downbla", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "12"}]], "+", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             SqrtBox[
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]]}]}], "}"}], "&"}], "/@", 
         "bla"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    FractionBox["xsecmultiplier", "10"], 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
                 "#"}], "&"}], "/@", 
               RowBox[{"{", "bla", "}"}]}], "]"}], ",", 
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"2", " ", "xsecmultiplier", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
                 "#"}], "&"}], "/@", 
               RowBox[{"{", "bla", "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
           RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", " ", "options"}], 
          "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"xsecmultiplier", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
               "#"}], "&"}], "/@", 
             RowBox[{"{", "bla", "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
           "options"}], "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLogPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"xsecmultiplier", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
               "#"}], "&"}], "/@", 
             RowBox[{"{", " ", 
              RowBox[{"upbla", ",", " ", "downbla"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
           RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", " ", 
           RowBox[{"Filling", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "2", "}"}], ",", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Gray", ",", 
                  RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], "}"}]}], 
             "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RescaledHistogramWithError", "[", 
     RowBox[{
     "data_", ",", " ", "xsecmultiplier_", ",", "binspec_", ",", 
      "options___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bla", ",", "upbla", ",", "downbla"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bla", "=", 
        RowBox[{"HistogramList", "[", 
         RowBox[{"data", ",", "binspec"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bla", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"bla", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", " ", 
           RowBox[{"bla", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"upbla", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{"Max", "[", 
              RowBox[{"1", ",", 
               SqrtBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]]}], "]"}]}]}], "}"}], "&"}], "/@",
          "bla"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"downbla", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             SqrtBox[
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]]}]}], "}"}], "&"}], "/@", 
         "bla"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"xsecmultiplier", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
               "#"}], "&"}], "/@", 
             RowBox[{"{", "bla", "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
           "options"}], "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"xsecmultiplier", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
               "#"}], "&"}], "/@", 
             RowBox[{"{", " ", 
              RowBox[{"upbla", ",", " ", "downbla"}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
           RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", " ", 
           RowBox[{"Filling", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", "2", "}"}], ",", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Gray", ",", 
                  RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], "}"}]}], 
             "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RescaledHistogramWithErrorLogAndLinear", "[", 
    RowBox[{
    "data_", ",", " ", "xsecmultiplier_", ",", "binspec_", ",", 
     "options___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RescaledHistogramWithError", "[", 
        RowBox[{
        "data", ",", " ", "xsecmultiplier", ",", "binspec", ",", "options"}], 
        "]"}], ",", " ", 
       RowBox[{"RescaledLogHistogramWithError", "[", 
        RowBox[{
        "data", ",", " ", "xsecmultiplier", ",", "binspec", ",", "options"}], 
        "]"}]}], "}"}], "}"}], "//", "TableForm"}]}], ";"}]}], "Input",
 ExpressionUUID -> "1b28eeff-a90e-4f46-904a-f75bfd4a40ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2D heatmaps", "Subsection",
 ExpressionUUID -> "1d15f33c-7183-479c-a7bf-9f727a273dde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Make2DHistogramsNoStatCheck", "[", 
     RowBox[{
     "data_", ",", "histrange1_", ",", "histrange2_", ",", " ", "dataname_", 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"xname_", ",", "yname_"}], "}"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "binstartpoints1", ",", "binstartpoints2", ",", " ", "datalist", ",", 
        " ", "numdatapointslist", ",", " ", "output"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "binstartpoints1", ",", "binstartpoints2", ",", " ", "datalist", ",",
           " ", "numdatapointslist"}], "}"}], "=", 
        RowBox[{"WeightedHistogramList", "[", 
         RowBox[{"data", ",", "histrange1", ",", "histrange2"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"plotlistSAVE", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"binstartpoints1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               FractionBox[
                RowBox[{"histrange1", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "2"]}], ",", 
              RowBox[{
               RowBox[{"binstartpoints2", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "+", 
               FractionBox[
                RowBox[{"histrange2", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "2"]}], ",", 
              RowBox[{
               RowBox[{"datalist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "datalist", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{
               RowBox[{"Dimensions", "[", "datalist", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", 
        RowBox[{
         RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
          RowBox[{"plotlistSAVE", ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"xname", ",", " ", "yname"}], "}"}]}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "\"\<SolarColors\>\""}], ",", 
           " ", 
           RowBox[{"BaseStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FontWeight", "\[Rule]", "Normal"}], ",", 
              RowBox[{"FontSize", "\[Rule]", "15"}]}], "}"}]}], ",", " ", 
           RowBox[{"PlotLabel", "\[Rule]", "dataname"}], ",", " ", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], "//", 
         "TableForm"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ClearMemory", "[", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "output"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Make2DHistograms", "[", 
    RowBox[{
    "data_", ",", "histrange1_", ",", "histrange2_", ",", " ", "dataname_", 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"xname_", ",", "yname_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "binstartpoints1", ",", "binstartpoints2", ",", " ", "datalist", ",", 
       " ", "numdatapointslist", ",", " ", "output"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "binstartpoints1", ",", "binstartpoints2", ",", " ", "datalist", ",", 
         " ", "numdatapointslist"}], "}"}], "=", 
       RowBox[{"WeightedHistogramList", "[", 
        RowBox[{"data", ",", "histrange1", ",", "histrange2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"plotlistSAVE", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"binstartpoints1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"histrange1", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "2"]}], ",", 
             RowBox[{
              RowBox[{"binstartpoints2", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"histrange2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "2"]}], ",", 
             RowBox[{
              RowBox[{"datalist", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "datalist", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "datalist", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plotliststatSAVE", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"binstartpoints1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"histrange1", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "2"]}], ",", 
             RowBox[{
              RowBox[{"binstartpoints2", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "+", 
              FractionBox[
               RowBox[{"histrange2", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "2"]}], ",", 
             RowBox[{
              RowBox[{"numdatapointslist", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "datalist", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "datalist", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"output", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
            RowBox[{"plotlistSAVE", ",", "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"xname", ",", " ", "yname"}], "}"}]}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", "\"\<SolarColors\>\""}], ",",
              " ", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontWeight", "\[Rule]", "Normal"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "15"}]}], "}"}]}], ",", " ", 
             RowBox[{"PlotLabel", "\[Rule]", "dataname"}], ",", " ", 
             RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
            RowBox[{"plotliststatSAVE", ",", "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"xname", ",", " ", "yname"}], "}"}]}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", "\"\<SolarColors\>\""}], ",",
              " ", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontWeight", "\[Rule]", "Normal"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "15"}]}], "}"}]}], ",", " ", 
             RowBox[{
             "PlotLabel", "\[Rule]", 
              "\"\<statistics check [ignoring weight]\>\""}], ",", " ", 
             RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], "}"}],
          "}"}], "//", "TableForm"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ClearMemory", "[", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "output"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 ExpressionUUID -> "feba9c86-2a78-4439-9f2c-4482ca5922d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"input", ":", " ", 
    RowBox[{"a", " ", "list", " ", "of", " ", "entries", " ", "like", " ", 
     RowBox[{"(", 
      RowBox[{"weight", ",", " ", 
       RowBox[{"{", 
        RowBox[{"data1", ",", " ", "data2"}], "}"}]}], ")"}]}]}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"output", ":"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"WeightedHistogramList", "[", 
    RowBox[{"data_", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "startrange1_", ",", " ", "endrange1_", ",", " ", "binwidth1_"}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "startrange2_", ",", " ", "endrange2_", ",", " ", "binwidth2_"}], 
      "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "binstartpoints1", ",", " ", "binstartpoints2", ",", " ", "datalist", 
       ",", " ", "numdatapointslist", ",", " ", "currentweight", ",", " ", 
       "currentdata", ",", " ", "bin1", ",", " ", "bin2"}], "}"}], ",", "\n", 
     "  ", "\n", "  ", 
     RowBox[{
      RowBox[{"binstartpoints1", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "i", ",", " ", "startrange1", ",", " ", "endrange1", ",", " ", 
             "binwidth1"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"binstartpoints2", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "i", ",", " ", "startrange2", ",", " ", "endrange2", ",", " ", 
             "binwidth2"}], "}"}]}], "]"}], ",", " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "  ", 
      RowBox[{"datalist", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "binstartpoints1", "]"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "binstartpoints2", "]"}], "}"}]}], "]"}]}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "will", " ", "be", " ", "the", " ", "data", " ", "to", 
        " ", "make", " ", "the", " ", "weighted", " ", "histogram"}], "*)"}], 
      "\n", "  ", 
      RowBox[{"numdatapointslist", " ", "=", " ", "datalist"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "contains", " ", "the", " ", "number", " ", "of", " ", 
        "weighted", " ", "datapoints", " ", "that", " ", "went", " ", "into", 
        " ", "each", " ", "bin"}], "*)"}], "\n", "  ", "\n", "  ", 
      RowBox[{"Monitor", "[", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\n", "     ", 
          RowBox[{
           RowBox[{
            RowBox[{"currentweight", " ", "=", " ", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", "dataindex", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "     ", 
            RowBox[{"currentdata", " ", "=", " ", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", "dataindex", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "     ", "\n", 
            "     ", 
            RowBox[{"bin1", " ", "=", " ", 
             RowBox[{"-", "1"}]}], ";", "\n", "     ", 
            RowBox[{"bin2", " ", "=", " ", 
             RowBox[{"-", "1"}]}], ";", "\n", "     ", "\n", "     ", 
            RowBox[{
             RowBox[{"Do", "[", "\n", "       ", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"IsInRange", "[", 
                   RowBox[{
                    RowBox[{"currentdata", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"binstartpoints1", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "binwidth1"}], "}"}]}]}], "]"}], 
                  ",", "\n", "         ", 
                  RowBox[{
                   RowBox[{"bin1", " ", "=", " ", "i"}], ";", "\n", 
                   "         ", 
                   RowBox[{"i", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "binstartpoints1", "]"}], " ", "+",
                     " ", "10"}]}], ";"}]}], " ", 
                 RowBox[{"(*", 
                  RowBox[{"exit", " ", "loop"}], "*)"}], "\n", "         ", 
                 "]"}], ";"}], "\n", "       ", ",", "\n", "       ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", 
                 RowBox[{"Length", "[", "binstartpoints1", "]"}]}], "}"}]}], 
              "]"}], "\n", "      ", "\n", "      ", 
             RowBox[{"Do", "[", "\n", "       ", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"IsInRange", "[", 
                   RowBox[{
                    RowBox[{"currentdata", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{"binstartpoints2", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "binwidth2"}], "}"}]}]}], "]"}], 
                  ",", "\n", "         ", 
                  RowBox[{
                   RowBox[{"bin2", " ", "=", " ", "i"}], ";", "\n", 
                   "         ", 
                   RowBox[{"i", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "binstartpoints2", "]"}], " ", "+",
                     " ", "10"}]}], ";"}]}], " ", 
                 RowBox[{"(*", 
                  RowBox[{"exit", " ", "loop"}], "*)"}], "\n", "         ", 
                 "]"}], ";"}], "\n", "       ", ",", "\n", "       ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", 
                 RowBox[{"Length", "[", "binstartpoints2", "]"}]}], "}"}]}], 
              "]"}]}], ";", "\n", "     ", "\n", "     ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"bin1", " ", ">", " ", "0"}], " ", "&&", " ", 
               RowBox[{"bin2", " ", ">", " ", "0"}]}], ",", "\n", "      ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"datalist", "[", 
                  RowBox[{"[", "bin1", "]"}], "]"}], "[", 
                 RowBox[{"[", "bin2", "]"}], "]"}], " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"datalist", "[", 
                   RowBox[{"[", "bin1", "]"}], "]"}], "[", 
                  RowBox[{"[", "bin2", "]"}], "]"}], " ", "+", " ", 
                 "currentweight"}]}], ";", "\n", "      ", 
               RowBox[{
                RowBox[{
                 RowBox[{"numdatapointslist", "[", 
                  RowBox[{"[", "bin1", "]"}], "]"}], "[", 
                 RowBox[{"[", "bin2", "]"}], "]"}], "++"}], ";"}]}], "\n", 
             "      ", "]"}], ";"}], "\n", "     ", "\n", "     ", "\n", 
           "     ", "\n", "     ", ",", " ", 
           RowBox[{"{", 
            RowBox[{"dataindex", ",", " ", "1", ",", " ", 
             RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], ";"}], 
        "\n", "   ", ",", " ", "dataindex"}], "]"}], ";", "\n", "  ", "\n", 
      "  ", "ClearMemory", ";", "\n", "  ", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{
       "binstartpoints1", ",", " ", "binstartpoints2", ",", " ", "datalist", 
        ",", " ", "numdatapointslist"}], "}"}]}]}], "\n", "  ", "\n", "  ", 
    "\n", "  ", "]"}]}]}]], "Input",
 ExpressionUUID -> "d1620f06-ba26-46c2-9a1c-a85f0594ab9e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Accessing basic kinematic properties of an event entry (i.e. a PARTICLE)\
\>", "Subtitle",
 ExpressionUUID -> "164401ed-1f86-4af2-9faa-b4035d69f354"],

Cell["\<\
Note
etaOf has been updated to be PSEUDORAPIDITY, and rapOf is now the real \
rapidity (previously called etaOf)\
\>", "Text",
 ExpressionUUID -> "650160d3-768e-494f-a8db-85810da53465"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "those", " ", "are", " ", "input", " ", "or", " ", "decayed", " ", 
    "particles"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"decayedOrIn", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"_", ",", 
        RowBox[{"-", "1"}], ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", 
        ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], 
      "  ", "|", " ", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "2", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
        "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EventOut", "[", " ", "event_", " ", "]"}], "  ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"event", ",", "decayedOrIn"}], "]"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SetOut", "[", " ", "event_", " ", "]"}], "  ", ":=", " ", 
     RowBox[{"(", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"event", ",", "decayedOrIn", ",", "2"}], "]"}], ")"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"EffMassAll", "[", "objList_", "]"}], "  ", ":=", 
      RowBox[{"Plus", " ", "@@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ptOf", ",", 
         RowBox[{"objList", "//", "Transpose"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EffMass", "[", "event_", "]"}], "  ", ":=", 
     RowBox[{"Plus", " ", "@@", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"ptOf", ",", "event", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pT", "[", "event_", "]"}], "  ", ":=", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"ptOf", ",", "event", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eta", "[", "event_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"etaOf", ",", "event", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"theta", "[", "event_", "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"thetaOf", ",", "event", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], "//", "Flatten"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"threeVector", "[", "event_", "]"}], " ", ":=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"ThreeVectorFrom", ",", "event", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MissingEnergy", "[", "event_", "]"}], " ", ":=", " ", 
     RowBox[{"Plus", " ", "@@", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"enOf", ",", "event", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ptOf", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "___"}], "}"}], "]"}], ":=", 
     SqrtBox[
      RowBox[{
       RowBox[{"px", "^", "2"}], "+", 
       RowBox[{"py", "^", "2"}]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ptVec", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "___"}], "}"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"px", ",", "py"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"enOf", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
        "_", ",", "_", ",", "En_", ",", "___"}], "}"}], "]"}], ":=", "En"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"thetaOf", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], ":=", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"pz", "/", 
       SqrtBox[
        RowBox[{
         RowBox[{"px", "^", "2"}], " ", "+", " ", 
         RowBox[{"py", "^", "2"}], "+", " ", 
         RowBox[{"pz", "^", "2"}]}]]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "want", " ", "to", " ", "follow", " ", "fastjet", " ", 
     "convention", " ", "and", " ", "return", " ", "phi", " ", "in", " ", 
     "the", " ", "range", " ", 
     RowBox[{"(", 
      RowBox[{"0", ",", " ", 
       RowBox[{"2", "\[Pi]"}]}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phifn", "[", 
     RowBox[{"px_", ",", "py_"}], "]"}], ":=", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"px", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"py", " ", ">", " ", "0"}]}], ",", " ", "\[IndentingNewLine]", 
      
      RowBox[{"ArcTan", "[", 
       RowBox[{"py", "/", "px"}], "]"}], "\[IndentingNewLine]", ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"px", " ", "<", " ", "0"}], " ", "&&", " ", 
       RowBox[{"py", " ", ">", " ", "0"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{"py", "/", "px"}], "]"}], " ", "+", " ", "\[Pi]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"px", " ", "<", " ", "0"}], " ", "&&", " ", 
       RowBox[{"py", " ", "<", " ", "0"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\[Pi]", "+", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"py", "/", "px"}], "]"}]}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"px", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"py", " ", "<", " ", "0"}]}], ",", " ", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"2", "\[Pi]"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"py", "/", "px"}], "]"}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"phiOf", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], ":=", " ", 
     RowBox[{"phifn", "[", 
      RowBox[{"px", ",", "py"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AbsMin", "[", "list_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"list", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#1", "]"}], "<", 
          RowBox[{"Abs", "[", "#2", "]"}]}], "&"}]}], "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"DeltaR", "[", 
       RowBox[{"part1_", ",", "part2_"}], "]"}], ":=", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"etaOf", "[", "part1", "]"}], " ", "-", " ", 
            RowBox[{"etaOf", "[", "part2", "]"}]}], ")"}], "^", "2"}], " ", 
         "+", "\[IndentingNewLine]", " ", 
         RowBox[{"Min", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"phiOf", "[", "part1", "]"}], "-", 
               RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}], "^", "2"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"phiOf", "[", "part1", "]"}], "-", 
                 RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}]}], ")"}], "^", 
             "2"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Pi]"}], " ", "+", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"phiOf", "[", "part1", "]"}], "-", 
                 RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}]}], ")"}], "^", 
             "2"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ")"}]}]}], ";"}],
     "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DeltaR", "[", 
      RowBox[{"part1_", ",", "part2_"}], "]"}], ":=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"etaOf", "[", "part1", "]"}], " ", "-", " ", 
           RowBox[{"etaOf", "[", "part2", "]"}]}], ")"}], "^", "2"}], " ", 
        "+", "\[IndentingNewLine]", " ", 
        RowBox[{
         RowBox[{"DeltaPhi", "[", 
          RowBox[{"part1", ",", "part2"}], "]"}], "^", "2"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DeltaPhi", "[", 
      RowBox[{"part1_", ",", "part2_"}], "]"}], ":=", 
     RowBox[{"AbsMin", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"phiOf", "[", "part1", "]"}], "-", 
          RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"phiOf", "[", "part1", "]"}], "-", 
            RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}]}], ")"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"phiOf", "[", "part1", "]"}], "-", 
            RowBox[{"phiOf", "[", "part2", "]"}]}], ")"}]}], ")"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"these", " ", "are", " ", 
       RowBox[{"wrong", "!"}], " ", "I", " ", 
       RowBox[{"don", "'"}], "t", " ", "know", " ", "where", " ", "the", " ", 
       "hell", " ", "they", " ", "came", " ", "from"}], "..."}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"etaOf", "[", 
       RowBox[{"{", 
        RowBox[{
        "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", 
         ",", "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], ":=", 
      RowBox[{"-", " ", 
       RowBox[{"Log", "[", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"Tan", "[", " ", 
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{"pz", "/", 
             SqrtBox[
              RowBox[{
               RowBox[{"px", "^", "2"}], " ", "+", " ", 
               RowBox[{"py", "^", "2"}], "+", " ", 
               RowBox[{"pz", "^", "2"}]}]]}], "]"}], "/", "2"}], "]"}], "]"}],
         "]"}]}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"etaOf", "[", 
       RowBox[{"{", 
        RowBox[{
        "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", 
         ",", "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], ":=", " ", 
      RowBox[{"ArcSinh", "[", 
       RowBox[{"pz", "/", 
        SqrtBox[
         RowBox[{
          RowBox[{"px", "^", "2"}], " ", "+", " ", 
          RowBox[{"py", "^", "2"}]}]]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"this", " ", "is", " ", "actual", " ", 
     RowBox[{"rapidity", "!!"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rapOf", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "pz_", ",", "e_", ",", "___"}], "}"}], "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"e", "+", "pz"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"e", "-", "pz"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"this", " ", "is", " ", "pseudorapidity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etaOf", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "pz_", ",", "e_", ",", "___"}], "}"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"Tan", "[", 
        RowBox[{
         RowBox[{"ArcCos", "[", 
          RowBox[{"pz", "/", 
           SqrtBox[
            RowBox[{
             RowBox[{"px", "^", "2"}], " ", "+", " ", 
             RowBox[{"py", "^", "2"}], "+", " ", 
             RowBox[{"pz", "^", "2"}]}]]}], "]"}], "/", "2"}], "]"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FourVectorFrom", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "pz_", ",", "En_", ",", "___"}], "}"}], "]"}], " ", ":=",
      " ", 
     RowBox[{"{", 
      RowBox[{"En", ",", " ", "px", ",", " ", "py", ",", "pz"}], " ", "}"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"FourLength", "[", 
       RowBox[{"{", 
        RowBox[{"pe_", ",", "pz_", ",", "px_", ",", "py_"}], "}"}], "]"}], 
      " ", ":=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pe", "^", "2"}], " ", "-", " ", 
          RowBox[{"pz", "^", "2"}], " ", "-", " ", 
          RowBox[{"px", "^", "2"}], " ", "-", " ", 
          RowBox[{"py", "^", "2"}]}], ",", "0.0"}], "]"}], "]"}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FourLength", "[", 
      RowBox[{"{", 
       RowBox[{"pe_", ",", "pz_", ",", "px_", ",", "py_"}], "}"}], "]"}], " ",
      ":=", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"pe", "^", "2"}], " ", "-", " ", 
       RowBox[{"pz", "^", "2"}], " ", "-", " ", 
       RowBox[{"px", "^", "2"}], " ", "-", " ", 
       RowBox[{"py", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FourLengthSq", "[", 
      RowBox[{"{", 
       RowBox[{"pe_", ",", "pz_", ",", "px_", ",", "py_"}], "}"}], "]"}], " ",
      ":=", " ", 
     RowBox[{
      RowBox[{"pe", "^", "2"}], " ", "-", " ", 
      RowBox[{"pz", "^", "2"}], " ", "-", " ", 
      RowBox[{"px", "^", "2"}], " ", "-", " ", 
      RowBox[{"py", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ThreeVectorFrom", "[", 
      RowBox[{"{", 
       RowBox[{
       "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "px_", ",",
         "py_", ",", "pz_", ",", "___"}], "}"}], "]"}], " ", ":=", " ", 
     RowBox[{"{", " ", 
      RowBox[{"px", ",", " ", "py", ",", "pz"}], " ", "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CosthetaTwoJet", "[", 
      RowBox[{"{", 
       RowBox[{"jet1_", ",", "jet2_"}], "}"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", 
       RowBox[{
        RowBox[{"a", " ", "=", " ", 
         RowBox[{"ThreeVectorFrom", "[", "jet1", "]"}]}], ";", " ", 
        RowBox[{"b", "=", "  ", 
         RowBox[{"ThreeVectorFrom", "[", "jet2", "]"}]}], ";", " ", 
        RowBox[{
         RowBox[{"a", ".", "b"}], "/", 
         SqrtBox[
          RowBox[{
           RowBox[{"a", ".", "a"}], " ", 
           RowBox[{"b", ".", "b"}]}]]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetAll", "[", "evt_", "]"}], ":=", "evt"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"all", "[", "evt_", "]"}], ":=", "True"}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Freq", "[", 
      RowBox[{"evtList_", ",", "crit_", ",", "objsel_", ",", "plotfunc_", ",", 
       RowBox[{"{", 
        RowBox[{"min_", ",", "max_", ",", "nbins_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"BinCounts", "[", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", " ", 
        RowBox[{"plotfunc", "/@", 
         RowBox[{"Flatten4", "[", 
          RowBox[{"objsel", "/@", 
           RowBox[{"Select", "[", 
            RowBox[{"evtList", ",", "crit"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"min", ",", "max", ",", 
         FractionBox[
          RowBox[{"max", "-", "min"}], "nbins"]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten4", "[", "List_", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"List", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"Depth", "[", "List", "]"}], "-", "4"}]}], "]"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"HGet", "[", 
       RowBox[{"patt_", ",", "All"}], "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{"Cases", "[", 
      RowBox[{"evt", ",", "patt"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oJetlhe", "=", "  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "2", ",", "1", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
        "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], "  ", 
      "|", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "1", ",", "_", ",", "_", ",", "_", ",", "_", 
        ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
        "_"}], "}"}], "|", 
      RowBox[{"{", 
       RowBox[{
       "21", ",", "1", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", 
        "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}]}], 
    "  ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oMissingEnergy", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "8888", ",", "1", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",",
        "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}], 
    "  ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PTSort", "[", "event_", "]"}], ":=", 
     RowBox[{"Sort", "[", 
      RowBox[{"event", ",", 
       RowBox[{
        RowBox[{"Greater", "[", 
         RowBox[{
          RowBox[{"ptOf", "[", "#1", "]"}], ",", 
          RowBox[{"ptOf", "[", "#2", "]"}]}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"and", "[", "f_", "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{"f", "[", "evt", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"and", "[", 
       RowBox[{"f_", ",", "g__"}], "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{
      RowBox[{"f", "[", "evt", "]"}], "&&", 
      RowBox[{
       RowBox[{"and", "[", "g", "]"}], "[", "evt", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"or", "[", "f_", "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{"f", "[", "evt", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"or", "[", 
       RowBox[{"f_", ",", "g__"}], "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{
      RowBox[{"f", "[", "evt", "]"}], "||", 
      RowBox[{
       RowBox[{"or", "[", "g", "]"}], "[", "evt", "]"}]}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"join", "[", "f_", "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{"f", "[", "evt", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"join", "[", 
       RowBox[{"f_", ",", "g__"}], "]"}], "[", "evt_", "]"}], ":=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"f", "[", "evt", "]"}], ",", 
       RowBox[{"join", "[", 
        RowBox[{"g", "[", "evt", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 ExpressionUUID -> "7d55ca88-c833-4d49-8a84-0b8463bdb692"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More useful kinematic functions & observables", "Subtitle",
 ExpressionUUID -> "5f3acc8e-1192-4ca9-8389-210bef61dfa8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Wmass", " ", "=", " ", "80.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmass", " ", "=", " ", "174.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zmass", " ", "=", " ", "91.2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MGMEwmass", " ", "=", " ", "79.82"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MGMEtmass", " ", "=", " ", "175"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FourDotProduct", "[", 
     RowBox[{"v_", ",", "u_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"u", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", "4"}], "]"}], "]"}], ".", 
      RowBox[{"u", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", "4"}], "]"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "finds", " ", "the", " ", "smallest", " ", "entry", " ", "of", " ", "a", 
    " ", "list", " ", "of", " ", "real", " ", "numbers", " ", "and", " ", 
    "returns", " ", 
    RowBox[{"{", 
     RowBox[{"min", ",", " ", 
      RowBox[{"positin", " ", "of", " ", "min", " ", "in", " ", "list"}]}], 
     "}"}]}], "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindMin", "[", "list_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"currentmin", ",", " ", "currentminPosn", ",", " ", "i"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"currentmin", " ", "=", " ", "Infinity"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"currentminPosn", " ", "=", " ", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "list", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<", "currentmin"}], ",", " ", 
            RowBox[{
             RowBox[{"currentminPosn", " ", "=", " ", "i"}], ";", " ", 
             RowBox[{"currentmin", " ", "=", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"currentmin", ",", " ", "currentminPosn"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"if", " ", "anything", " ", "in", " ", "number"}], ",", " ", 
    RowBox[{"range", " ", "is", " ", "imaginary"}], ",", " ", 
    RowBox[{"return", " ", 
     RowBox[{"FALSE", "!"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IsInRange", "[", 
     RowBox[{"number_", ",", "range_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"number", " ", 
        RowBox[{"range", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", 
        RowBox[{"range", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "  ", "\[Element]", " ", "Reals"}],
       ",", " ", 
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"number", " ", "\[GreaterEqual]", " ", 
          RowBox[{"range", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{"number", " ", "\[LessEqual]", 
          RowBox[{"range", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}], ",", " ", 
      "False", ",", " ", "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvMassSq", "[", 
     RowBox[{"event_", ",", "particleList_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"FourLength", "[", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"FourVectorFrom", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", 
           RowBox[{"particleList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "particleList", "]"}]}], "}"}]}], "]"}], 
      "]"}], "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "invariant", " ", "mass", " ", "with", " ", "jet", " ", "rescaling"}], 
    ",", " ", 
    RowBox[{"used", " ", 
     RowBox[{"e", ".", "g", ".", " ", "in"}], " ", "top", " ", 
     "reconstruction"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvMassScaled", "[", 
     RowBox[{"event_", ",", "particleList_", ",", "scalelist_"}], "]"}], ":=",
     " ", 
    RowBox[{"FourLength", "[", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"scalelist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], 
        RowBox[{"FourVectorFrom", "[", 
         RowBox[{"event", "[", 
          RowBox[{"[", 
           RowBox[{"particleList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "particleList", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvMass", "[", 
     RowBox[{"event_", ",", "particleList_"}], "]"}], ":=", " ", 
    RowBox[{"FourLength", "[", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"FourVectorFrom", "[", 
        RowBox[{"event", "[", 
         RowBox[{"[", 
          RowBox[{"particleList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "particleList", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvMass", "[", "particles_", "]"}], ":=", " ", 
    RowBox[{"FourLength", "[", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"FourVectorFrom", "[", 
        RowBox[{"particles", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "particles", "]"}]}], "}"}]}], "]"}], "]"}]}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "creates", " ", "a", " ", "list", " ", "with", " ", "entries", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xi", ",", " ", 
         "\"\<number of events between xi -dx and xi + dx\>\""}], "}"}], " ", 
       "--"}], " ", "basically", " ", "a", " ", "histogram", " ", "in", " ", 
      "listplot", " ", "form"}], ",", " ", 
     RowBox[{
     "more", " ", "useful", " ", "for", " ", "some", " ", "applications"}]}], 
    "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MyBinList", "[", 
     RowBox[{"list_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"xmin_", ",", "xmax_", ",", " ", "dx_"}], "}"}]}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"xmin", " ", "-", " ", 
          RowBox[{"dx", "/", "2"}], " ", "+", " ", 
          RowBox[{"i", " ", "dx"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xmax", "-", "xmin"}], ")"}], "/", "dx"}], "]"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"BinCounts", "[", 
        RowBox[{"list", ",", " ", 
         RowBox[{"{", 
          RowBox[{"xmin", ",", " ", "xmax", ",", " ", "dx"}], "}"}]}], 
        "]"}]}], "}"}], "//", "Transpose"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "just", " ", "like", " ", "my", " ", "regular", " ", "MyBinList", " ", 
     "function"}], ",", " ", 
    RowBox[{
    "except", " ", "the", " ", "counts", " ", "are", " ", "renormalized", " ",
      "by", " ", "a", " ", "set", " ", "number"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MyRenormalizedBinList", "[", 
     RowBox[{"list_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"xmin_", ",", "xmax_", ",", " ", "dx_"}], "}"}], ",", " ", 
      "norm_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"xmin", " ", "-", " ", 
          RowBox[{"dx", "/", "2"}], " ", "+", " ", 
          RowBox[{"i", " ", "dx"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xmax", "-", "xmin"}], ")"}], "/", "dx"}], "]"}]}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"norm", " ", 
        RowBox[{"BinCounts", "[", 
         RowBox[{"list", ",", " ", 
          RowBox[{"{", 
           RowBox[{"xmin", ",", " ", "xmax", ",", " ", "dx"}], "}"}]}], 
         "]"}]}]}], "}"}], "//", "Transpose"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"that", " ", "way", " ", "I", " ", 
    RowBox[{"don", "'"}], "t", " ", "have", " ", "to", " ", "memorize", " ", 
    "where", " ", "in", " ", "each", " ", 
    RowBox[{"event", "[", 
     RowBox[{"[", "particle", "]"}], "]"}], " ", "entry", " ", "the", " ", 
    "various", " ", "variables", " ", "are"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pidIndex", " ", ",", " ", "inoutIndex", ",", "mother1Index", " ", ",", 
      "mother2Index", ",", "color1Index", ",", " ", "color2Index", ",", " ", 
      "pxIndex", ",", " ", "pyIndex", ",", " ", "pzIndex", ",", " ", 
      "p0Index", ",", " ", "massIndex", ",", " ", "sixIndex", ",", " ", 
      "helIndex", ",", " ", "tagindex", ",", " ", "reconindex", ",", " ", 
      "combindex", ",", " ", "MCreconindex"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", " ", 
      "14", ",", "15", ",", " ", "16", ",", " ", "17"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Feed", " ", "this", " ", "function", " ", "a", " ", "list", " ", "of", 
    " ", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "True", ",", "True", ",", "..."}], 
     "}"}], " ", "and", " ", 
    RowBox[{"it", "'"}], "ll", " ", "return", " ", "True", " ", "IFF", " ", 
    "all", " ", "entries", " ", "are", " ", "TRUE"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AllTrue", "[", "booleanlist_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Union", "[", "booleanlist", "]"}], "]"}], "\[Equal]", "1"}], 
      ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Union", "[", "booleanlist", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ")"}], ",", "False"}], "]"}]}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VectorLength", "[", "vec_", "]"}], ":=", 
    SqrtBox[
     RowBox[{"vec", ".", "vec"}]]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"finds", " ", "total", " ", "visible", " ", "pT", " ", 
     RowBox[{"(", "vector", ")"}], " ", "from", " ", "an", " ", "OUT"}], "-", 
    "event"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TotalVisiblepT", "[", "event_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"visiblept", ",", " ", "currentparticle", ",", " ", "i"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"visiblept", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "event", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"currentparticle", " ", "=", " ", 
           RowBox[{"event", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"invisiblelist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"visiblept", " ", "=", "  ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"currentparticle", "[", 
                  RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                 RowBox[{"currentparticle", "[", 
                  RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}], " ", "+", 
               " ", "visiblept"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "visiblept"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"finds", " ", "total", " ", "visible", " ", "pT", " ", 
     RowBox[{"(", "vector", ")"}], " ", "from", " ", "an", " ", "OUT"}], "-", 
    "event"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TotalVisiblep", "[", "event_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"visiblept", ",", " ", "currentparticle", ",", " ", "i"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"visiblept", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "event", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"currentparticle", " ", "=", " ", 
           RowBox[{"event", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"invisiblelist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"visiblept", " ", "=", "  ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"currentparticle", "[", 
                  RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                 RowBox[{"currentparticle", "[", 
                  RowBox[{"[", "pyIndex", "]"}], "]"}], ",", 
                 RowBox[{"currentparticle", "[", 
                  RowBox[{"[", "pzIndex", "]"}], "]"}]}], "}"}], " ", "+", 
               " ", "visiblept"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "visiblept"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"missingpT", "[", "event_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"TotalVisiblepT", "[", "event", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"missingET", "[", "event_", "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"TotalVisiblepT", "[", "event", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MET", "[", "event_", "]"}], " ", ":=", " ", 
    RowBox[{"missingET", "[", "event", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HT", "[", "particles_", "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"particles", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "//", "ptOf"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "particles", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "all", " ", "of", " ", "the", " ", "below", " ", "functions", " ", "with",
      " ", "names", " ", "like", " ", "xxxxJetpTxxx", " ", "take", " ", "an", 
     " ", "event", " ", "and", " ", "a", " ", "list", " ", "of", " ", "PIDs", 
     " ", "or", " ", "TAGs", " ", "and", " ", "return", " ", "either", " ", 
     "the", " ", "maximum", " ", "pT", " ", "of", " ", "those", " ", 
     "particles"}], ",", " ", 
    RowBox[{
    "or", " ", "a", " ", "list", " ", "of", " ", "all", " ", "pTs", " ", 
     RowBox[{"(", 
      RowBox[{"vector", " ", "lengths"}], ")"}], " ", "or", " ", "a", " ", 
     "list", " ", "of", " ", "pTs", " ", 
     RowBox[{"(", "vectors", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "function", " ", "reconstructs", " ", "neutrino", " ", 
    "transverse", " ", "momentum", " ", 
    RowBox[{"(", 
     RowBox[{"assuming", " ", 
      RowBox[{"there", "'"}], "s", " ", "only", " ", 
      RowBox[{"one", "!"}]}], ")"}], " ", "to", " ", "get", " ", "the", " ", 
    "total", " ", "transverse", " ", "mass", " ", "for", " ", "a", " ", 
    "given", " ", "event"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"assumes", " ", 
    FormBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["M", "T"], "2"], " ", "=", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Sum]", " ", 
           RowBox[{"|", 
            SubscriptBox["p", "T"], "|"}]}], ")"}], "2"], " ", "-", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Sum]", " ", 
           SubscriptBox["p", "T"]}], ")"}], "2"]}], "  ", "=", "  ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Sum]", " ", 
           SubscriptBox["E", "T"]}], ")"}], "2"], " ", "-", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Sum]", " ", 
           SubscriptBox["p", "T"]}], ")"}], "2"], " ", " "}]}]}],
     TraditionalForm]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TotalMT", "[", "event_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "visiblepts", ",", " ", "currentevent", ",", " ", "i", ",", " ", 
        "neutrinopt", ",", " ", "allpt", ",", "MT"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "collect", " ", "all", " ", "the", " ", "visible", " ", "pts"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"visiblepts", " ", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "event", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"currentevent", " ", "=", " ", 
           RowBox[{"event", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"invisiblelist", ",", " ", 
               RowBox[{"currentevent", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"visiblepts", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"visiblepts", ",", "  ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"currentevent", "[", 
                  RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                 RowBox[{"currentevent", "[", 
                  RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}]}], " ", 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"reconstruct", " ", "neutrino", " ", "pT"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"neutrinopt", " ", "=", " ", 
        RowBox[{"-", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"visiblepts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "visiblepts", "]"}]}], "}"}]}], "]"}]}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"allpt", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"visiblepts", ",", " ", "neutrinopt"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MT", " ", "=", " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"VectorLength", "[", 
               RowBox[{"allpt", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "allpt", "]"}]}], "}"}]}], "]"}], "2"],
            " ", "-", " ", 
           SuperscriptBox[
            RowBox[{"VectorLength", "[", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"allpt", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "allpt", "]"}]}], "}"}]}], "]"}], 
             "]"}], "2"]}], ")"}]}]}], ";", "\[IndentingNewLine]", "MT"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "takes", " ", "all", " ", "possible", " ", "jet", " ", "pairs", " ", 
    RowBox[{"(", 
     RowBox[{"by", " ", "PID"}], ")"}], " ", "and", " ", "gives", " ", "the", 
    " ", "minimum", " ", "DeltaR", " ", "jet", " ", "seperation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MinDeltaRJetsPID", "[", "event_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"alljets", ",", "alljetpairs", ",", "\[CapitalDelta]Rlist"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"alljets", " ", "=", " ", 
        RowBox[{"FindParticles", "[", 
         RowBox[{"event", ",", " ", "jetlist"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"alljetpairs", " ", "=", " ", 
        RowBox[{"Subsets", "[", 
         RowBox[{"alljets", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[CapitalDelta]Rlist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"DeltaR", "[", 
           RowBox[{
            RowBox[{"event", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"alljetpairs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"event", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"alljetpairs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "alljetpairs", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Min", "[", "\[CapitalDelta]Rlist", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "takes", " ", "all", " ", "possible", " ", "jet", " ", "pairs", " ", 
    RowBox[{"(", 
     RowBox[{"by", " ", "TAG"}], ")"}], " ", "and", " ", "gives", " ", "the", 
    " ", "minimum", " ", "DeltaR", " ", "jet", " ", "seperation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MinDeltaRJetsTAG", "[", "event_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"alljets", ",", "alljetpairs", ",", "\[CapitalDelta]Rlist"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alljets", " ", "=", " ", 
       RowBox[{"FindTags", "[", 
        RowBox[{"event", ",", " ", 
         RowBox[{"{", 
          RowBox[{"btag", ",", " ", "jettag"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"alljetpairs", " ", "=", " ", 
       RowBox[{"Subsets", "[", 
        RowBox[{"alljets", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalDelta]Rlist", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DeltaR", "[", 
          RowBox[{
           RowBox[{"event", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"alljetpairs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"event", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"alljetpairs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "alljetpairs", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Min", "[", "\[CapitalDelta]Rlist", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "eef1fcd7-ee5c-45f0-8646-52a34c880dd3"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"AllTrue\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"AllTrue\\\", \\\"[\\\", \\\"booleanlist_\\\", \
\\\"]\\\"}]\\) is Protected.\"",2,178,1,28605394896414742572,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 ExpressionUUID -> "b5dd1a15-8afe-42d6-a507-07a697050ac7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Finding particle entries in an event ", "Subtitle",
 ExpressionUUID -> "afd23b8f-1238-4357-992a-8db64175ebf9"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "feed", " ", "this", " ", "function", " ", "an", " ", "event", " ", "and", 
    " ", "a", " ", "list", " ", "of", " ", "particle", " ", "IDs", " ", "and",
     " ", 
    RowBox[{"it", "'"}], "ll", " ", "output", " ", "a", " ", "list", " ", 
    "of", " ", "indices", " ", "indicating", " ", "which", " ", "particles", 
    " ", "in", " ", "the", " ", "event", " ", "are", " ", "of", " ", "that", 
    " ", "type"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindParticles", "[", 
      RowBox[{"event_", ",", "pidlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"indexlist", " ", ",", "i", ",", "j"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"indexlist", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", "pidlist", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"event", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "pidIndex", "]"}], "]"}], " ", "\[Equal]", " ", 
                 RowBox[{"pidlist", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                RowBox[{"indexlist", " ", "=", " ", 
                 RowBox[{"Append", "[", 
                  RowBox[{"indexlist", ",", " ", "i"}], "]"}]}]}], "]"}], ";",
               " ", "Break", ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "indexlist"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindTags", "[", 
      RowBox[{"event_", ",", "taglist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"indexlist", " ", ",", "i", ",", "j"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"indexlist", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", "taglist", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"event", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "tagindex", "]"}], "]"}], " ", "\[Equal]", " ", 
                 RowBox[{"taglist", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                RowBox[{"indexlist", " ", "=", " ", 
                 RowBox[{"Append", "[", 
                  RowBox[{"indexlist", ",", " ", "i"}], "]"}]}]}], "]"}], ";",
               " ", "Break", ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "indexlist"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindRecon", "[", 
      RowBox[{"event_", ",", "reconlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"indexlist", " ", ",", "i", ",", "j"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"indexlist", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", "reconlist", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"event", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "reconindex", "]"}], "]"}], " ", "\[Equal]", 
                 " ", 
                 RowBox[{"reconlist", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                RowBox[{"indexlist", " ", "=", " ", 
                 RowBox[{"Append", "[", 
                  RowBox[{"indexlist", ",", " ", "i"}], "]"}]}]}], "]"}], ";",
               " ", "Break", ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "indexlist"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMCRecon", "[", 
      RowBox[{"event_", ",", "reconlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"indexlist", " ", ",", "i", ",", "j"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"indexlist", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", " ", "=", " ", "1"}], ",", " ", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", "reconlist", "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"event", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "MCreconindex", "]"}], "]"}], " ", "\[Equal]", 
                 " ", 
                 RowBox[{"reconlist", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                RowBox[{"indexlist", " ", "=", " ", 
                 RowBox[{"Append", "[", 
                  RowBox[{"indexlist", ",", " ", "i"}], "]"}]}]}], "]"}], ";",
               " ", "Break", ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "indexlist"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 ExpressionUUID -> "af3847bf-8494-4f84-a47d-0e0f41e68359"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Finding sets of particles based on their pT-ranking in a list\
\>", "Subtitle",
 ExpressionUUID -> "a3d5d920-e33a-4b60-942a-37ee895c4dc8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "finds", " ", "pT", " ", "of", " ", "most", " ", "energetic", " ", "jet", 
    " ", "using", " ", "exact", " ", "particle", " ", "IDs"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"jetPIDlist", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "4"}], ",", "5", ",", 
       RowBox[{"-", "5"}], ",", "6", ",", 
       RowBox[{"-", "6"}], ",", "21"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"obsolete", " ", "naming"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jetlist", " ", "=", " ", "jetPIDlist"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]PIDlist", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "13"}], ",", "13"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ePIDlist", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "11"}], ",", "11"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]PIDlist", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"15", ",", 
       RowBox[{"-", "15"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"leptonPIDlist", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"\[Mu]PIDlist", ",", "ePIDlist", ",", "\[Tau]PIDlist"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lightleptonPIDlist", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"\[Mu]PIDlist", ",", "ePIDlist"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bPIDlist", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HighestJetpT", "[", "event_", "]"}], " ", ":=", " ", 
     RowBox[{"HighestJetpT", "[", 
      RowBox[{"event", ",", "jetlist"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"as", " ", "above"}], ",", " ", 
     RowBox[{
     "except", " ", "we", " ", "can", " ", "specify", " ", "the", " ", 
      "jetlist"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HighestJetpT", "[", 
      RowBox[{"event_", ",", " ", "jetlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"jetpts", ",", " ", "currentparticle", ",", " ", "i"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jetpts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentparticle", " ", "=", " ", 
            RowBox[{"event", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"jetlist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"jetpts", " ", "=", " ", 
               RowBox[{"Append", "[", 
                RowBox[{"jetpts", ",", " ", 
                 RowBox[{"VectorLength", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}], "]"}]}], 
                "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", "jetpts", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SmallestJetpT", "[", 
      RowBox[{"event_", ",", " ", "jetlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"jetpts", ",", " ", "currentparticle", ",", " ", "i"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jetpts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentparticle", " ", "=", " ", 
            RowBox[{"event", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"jetlist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"jetpts", " ", "=", " ", 
               RowBox[{"Append", "[", 
                RowBox[{"jetpts", ",", " ", 
                 RowBox[{"VectorLength", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}], "]"}]}], 
                "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Min", "[", "jetpts", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AllJetpTVec", "[", 
      RowBox[{"event_", ",", " ", "jetlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"jetpts", ",", " ", "currentparticle", ",", " ", "i"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jetpts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentparticle", " ", "=", " ", 
            RowBox[{"event", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"jetlist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"jetpts", " ", "=", " ", 
               RowBox[{"Append", "[", 
                RowBox[{"jetpts", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                   RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}]}], "]"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "jetpts"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AllJetpT", "[", 
      RowBox[{"event_", ",", " ", "jetlist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"jetpts", ",", " ", "currentparticle", ",", " ", "i"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jetpts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentparticle", " ", "=", " ", 
            RowBox[{"event", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"jetlist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "pidIndex", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"jetpts", " ", "=", " ", 
               RowBox[{"Append", "[", 
                RowBox[{"jetpts", ",", " ", 
                 RowBox[{"VectorLength", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}], "]"}]}], 
                "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "jetpts"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "finds", " ", "pT", " ", "of", " ", "most", " ", "energetic", " ", "jet", 
     " ", 
     RowBox[{"(", 
      RowBox[{"b", " ", "or", " ", "regular"}], ")"}], " ", "using", " ", 
     "TAGS"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ONLY", " ", "INPUT", " ", "A", " ", "TAGGED", " ", "EVENT"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HighestJetpTTags", "[", "event_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"jetpts", ",", " ", "currentparticle", ",", " ", "i"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jetpts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentparticle", " ", "=", " ", 
            RowBox[{"event", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"btag", ",", " ", "jettag"}], "}"}], ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "tagindex", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"jetpts", " ", "=", " ", 
               RowBox[{"Append", "[", 
                RowBox[{"jetpts", ",", " ", 
                 RowBox[{"VectorLength", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}], "]"}]}], 
                "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Max", "[", "jetpts", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "finds", " ", "pT", " ", "of", " ", "most", " ", "energetic", " ", "jet", 
     " ", 
     RowBox[{"(", 
      RowBox[{"b", " ", "or", " ", "regular"}], ")"}], " ", "using", " ", 
     "TAGS"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ONLY", " ", "INPUT", " ", "A", " ", "TAGGED", " ", "EVENT"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AllJetpTTags", "[", 
      RowBox[{"event_", ",", " ", "taglist_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"jetpts", ",", " ", "currentparticle", ",", " ", "i"}], "}"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"jetpts", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "event", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentparticle", " ", "=", " ", 
            RowBox[{"event", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"taglist", ",", " ", 
               RowBox[{"currentparticle", "[", 
                RowBox[{"[", "tagindex", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"jetpts", " ", "=", " ", 
               RowBox[{"Append", "[", 
                RowBox[{"jetpts", ",", " ", 
                 RowBox[{"VectorLength", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pxIndex", "]"}], "]"}], ",", 
                    RowBox[{"currentparticle", "[", 
                    RowBox[{"[", "pyIndex", "]"}], "]"}]}], "}"}], "]"}]}], 
                "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "jetpts"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AllJetpTTags", "[", "event_", "]"}], " ", ":=", " ", 
     RowBox[{"AllJetpTTags", "[", 
      RowBox[{"event", ",", 
       RowBox[{"{", 
        RowBox[{"btag", ",", " ", "jettag"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 ExpressionUUID -> "e540dfca-4e69-4c54-8084-f398a76c120b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "outputs", " ", "the", " ", "number", " ", "of", " ", "particles", " ", 
     "specified", " ", "by", " ", "the", " ", "PIDlist", " ", "that", " ", 
     "have", " ", "pT"}], " ", ">", " ", "minpT"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NumberJetsWithpTAbovepTMin", "[", 
     RowBox[{"currentevent_", ",", "PIDlist_", ",", "minpT_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"temp", ",", "temp2", ",", "temp3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "=", 
        RowBox[{"AllJetpT", "[", 
         RowBox[{"currentevent", ",", "jetlist"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"temp2", " ", "=", " ", 
        RowBox[{
         RowBox[{"temp", "-", "minpT"}], "//", "Sign"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"temp3", " ", "=", " ", 
        RowBox[{
         RowBox[{"0", " ", "temp2"}], " ", "+", " ", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"temp3", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{"temp2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "temp3", "]"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 ExpressionUUID -> "e8e8a8e0-59b1-4408-8dde-f9b1e613ffaf"],

Cell[CellGroupData[{

Cell["Example: 14 TeV pp Collision at LHC", "Section"],

Cell[TextData[{
 "We run a 14 TeV proton proton collisions at the LHC and obtain an output in \
an LHE file. This is done using the command \n\n\t",
 StyleBox["crmc -x -o lhe -n1 -m0 -S14000 -f \
~/allMyStuff/BoostedDM/crmcruns/14TeVpp.lhe\n\n", "Input"],
 "This generates a Les Housches Event file in the location shown. In terms of \
the other options;\n\t\n\t",
 StyleBox["-x", "Input"],
 "  \t\tprint cross section to terminal\n\t",
 StyleBox["-o lhe", "Input"],
 "  \toutput format is lhe\n\t",
 StyleBox["-n1", "Input"],
 "  \t\t100 collisions\n\t",
 StyleBox["-m0", "Input"],
 "  \t\tEPOS_LHC event model\n\t",
 StyleBox["-S14000", "Input"],
 "  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["s", 
     RowBox[{"1", "/", "2"}]], "=", 
    RowBox[{
     RowBox[{"14000", " ", "GeV"}], "=", 
     RowBox[{"14", " ", "TeV"}]}]}], TraditionalForm]]],
 "\n\t",
 StyleBox["-f /path/", "Input"],
 "  \tchoice of output file\n\nWe can now try to begin analysing the .lhe  \
file using the functions above."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LHEfile", "=", "\"\</mnt/james/lhe/14000.00-1.lhe\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Time taken to read events: \>\"", ",", " ", 
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{
       RowBox[{"testp", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"LHEfile", ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eventList", "=", 
   RowBox[{"ReadME", "[", "testp", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Number of events: \>\"", ",", " ", 
    RowBox[{"Nevents", "=", 
     RowBox[{"Length", "[", "eventList", "]"}]}]}], "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time taken to read events: \"\>", "\[InvisibleSpace]", "0.`"}],
  
  SequenceForm["Time taken to read events: ", 0.],
  Editable->False]], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of events: \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Number of events: ", 1],
  Editable->False]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EventPrint", "[", 
  RowBox[{"eventList", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"#\"\>", "pid", 
      FractionBox["in", "out"], "mother1", "mother2", "color1", "color2", 
      "px", "py", "pz", "p0", "mass", "6", "hel"},
     {"1", 
      RowBox[{"particle", "[", "2212", "]"}], 
      RowBox[{"finout", "[", 
       RowBox[{"-", "9"}], "]"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0.`", "0.`", "13999.999052371713`", 
      "13999.999083813478`", "0.9382799863815308`", "6.964651114366732`*^17", 
      "9.`"},
     {"2", 
      RowBox[{"particle", "[", "2212", "]"}], 
      RowBox[{"finout", "[", 
       RowBox[{"-", "9"}], "]"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0.`", "0.`", "6.351073582032508`*^-8", 
      "0.9382799863815329`", "0.9382799863815308`", "2.4907363261828407`*^19",
       "9.`"},
     {"3", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", 
      RowBox[{"-", "0.16944579780101776`"}], "0.21645036339759827`", 
      "4172.916109215638`", "4172.916120603654`", "0.1395701766014099`", 
      "1.1066121859072472`*^8", "9.`"},
     {"4", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.10659249126911163`"}], 
      RowBox[{"-", "0.1630309373140335`"}], "101.91685543680921`", 
      "101.91713095380263`", "0.1349765956401825`", "0.0043369420799999996`", 
      "9.`"},
     {"5", 
      RowBox[{"particle", "[", "2112", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", "0.22050461173057556`", 
      RowBox[{"-", "0.40744689106941223`"}], "2.413715285559901`", 
      "2.631244674241745`", "0.9395700097084045`", "3.889868612171948`*^14", 
      "9.`"},
     {"6", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", 
      RowBox[{"-", "0.17026863992214203`"}], "0.30087780952453613`", 
      "1.086964594572649`", "1.1491260723072343`", "0.1395701766014099`", 
      "56914.83213738803`", "9.`"},
     {"7", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.16057167947292328`"}], "0.18363548815250397`", 
      "0.6117306443414294`", "0.6722635787804939`", "0.1349765956401825`", 
      "0.000281306144`", "9.`"},
     {"8", 
      RowBox[{"particle", "[", "21214", "]"}], "\<\"decayed\"\>", "1", "2", 
      "0", "0", "0.21858881413936615`", 
      RowBox[{"-", "0.20910881459712982`"}], "4.246217661835059`", 
      "4.5861826168382285`", "1.7062236070632935`", 
      "2.2586002349853514`*^-12", "9.`"},
     {"9", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "1", "2", "0", "0", 
      "0.5137116312980652`", 
      RowBox[{"-", "0.01921820640563965`"}], "36.63414202538025`", 
      "36.638014557963096`", "0.1395701766014099`", "4.002679447063888`*^6", 
      "9.`"},
     {"10", 
      RowBox[{"particle", "[", "311", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.4599493145942688`"}], 
      RowBox[{"-", "0.4228872060775757`"}], "63.66398009373343`", 
      "63.668991069123294`", "0.4976699948310852`", "6.1229296875`*^-9", 
      "9.`"},
     {"11", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", "0.17363475263118744`", 
      RowBox[{"-", "0.5257267355918884`"}], "11.790642582488946`", 
      "11.80445974918105`", "0.1395701766014099`", "365176.5706854236`", 
      "9.`"},
     {"12", 
      RowBox[{"particle", "[", "221", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "1.1144834756851196`"}], "0.5045909881591797`", 
      "7.854172714810824`", "7.9677385385652`", "0.5478529930114746`", 
      "1.121407875`*^-6", "9.`"},
     {"13", 
      RowBox[{"particle", "[", "113", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.5092570781707764`"}], 
      RowBox[{"-", "0.17499509453773499`"}], "14.15012836961173`", 
      "14.181589602353032`", "0.7754899859428406`", "9.097608327865601`*^-13",
       "9.`"},
     {"14", 
      RowBox[{"particle", "[", "213", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", "0.06917853653430939`", "0.16400615870952606`", 
      "43.28095805142467`", "43.28827090861324`", "0.7754899859428406`", 
      "1.0056776046752929`*^-11", "9.`"},
     {"15", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "1", "2", "0", "0", 
      "0.0680837333202362`", 
      RowBox[{"-", "0.23621618747711182`"}], "46.90816563397119`", 
      "46.909017432261805`", "0.1395701766014099`", "3.3862896551198717`*^6", 
      "9.`"},
     {"16", 
      RowBox[{"particle", "[", "213", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.11410050094127655`"}], 
      RowBox[{"-", "0.05227828025817871`"}], "53.61369960576885`", 
      "53.61945469770109`", "0.7754899859428406`", "1.0328289031982422`*^-11",
       "9.`"},
     {"17", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", "0.04890458658337593`", "0.15328340232372284`", 
      "585.5732128745218`", "585.5732516120287`", "0.1395701766014099`", 
      "2.5300549805451248`*^7", "9.`"},
     {"18", 
      RowBox[{"particle", "[", "113", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", "0.044189050793647766`", "0.02334650047123432`", 
      "3089.493064285662`", "3089.4931620173006`", "0.7754899859428406`", 
      "6.69230322265625`*^-9", "9.`"},
     {"19", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.32196640968322754`"}], 
      RowBox[{"-", "0.10065942257642746`"}], "407.5003058754072`", 
      "407.50046785484807`", "0.1349765956401825`", "0.018964301824`", 
      "9.`"},
     {"20", 
      RowBox[{"particle", "[", "113", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", "0.47705838084220886`", "0.14686207473278046`", 
      "119.93794781783252`", "119.94149350678914`", "0.7754899859428406`", 
      "5.637288208007812`*^-10", "9.`"},
     {"21", 
      RowBox[{"particle", "[", "113", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", "0.8522764444351196`", "0.23906086385250092`", 
      "83.40436109779773`", "83.41266306793293`", "0.7754899859428406`", 
      "3.534725952148437`*^-11", "9.`"},
     {"22", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.13909636437892914`"}], 
      RowBox[{"-", "0.12869033217430115`"}], "10.265969960130626`", 
      "10.26860588901208`", "0.1349765956401825`", "0.000509615104`", "9.`"},
     {"23", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "1114"}], "]"}], "\<\"decayed\"\>", "1", "2", "0", "0", 
      "1.3073158264160156`", "0.0925188958644867`", "142.73555321251604`", 
      "142.74688651344601`", "1.2319999933242798`", 
      "3.2370727539062496`*^-11", "9.`"},
     {"24", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", "0.21718758344650269`", "0.018218405544757843`", 
      "455.56641697707647`", "455.5664891081977`", "0.1349765956401825`", 
      "0.070063702016`", "9.`"},
     {"25", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "213"}], "]"}], "\<\"decayed\"\>", "1", "2", "0", "0", 
      RowBox[{"-", "0.19319753348827362`"}], 
      RowBox[{"-", "0.10229456424713135`"}], "675.4062329331352`", 
      "675.4067135135034`", "0.7754899859428406`", "3.510501480102539`*^-11", 
      "9.`"},
     {"26", 
      RowBox[{"particle", "[", "3112", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", "0.7718414068222046`", 
      RowBox[{"-", "0.4544159770011902`"}], "2583.3006542230846`", 
      "2583.3010870026656`", "1.1973999738693237`", "60757.260204244994`", 
      "9.`"},
     {"27", 
      RowBox[{"particle", "[", "311", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.6830242276191711`"}], 
      RowBox[{"-", "0.10008512437343597`"}], "73.0961850776937`", 
      "73.10113875627276`", "0.4976699948310852`", "1.9104296875`*^-8", "9.`"},
     {"28", 
      RowBox[{"particle", "[", "321", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", 
      RowBox[{"-", "0.5056812763214111`"}], "0.27771979570388794`", 
      "479.23164918066317`", "479.2322507252898`", "0.4936769902706146`", 
      "2.466146306985296`*^6", "9.`"},
     {"29", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "311"}], "]"}], "\<\"decayed\"\>", "1", "2", "0", "0", 
      "0.322968065738678`", "0.13193200528621674`", "110.95871666653153`", 
      "110.96038119136435`", "0.4976699948310852`", "6.2716796875`*^-9", 
      "9.`"},
     {"30", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "213"}], "]"}], "\<\"decayed\"\>", "1", "2", "0", "0", 
      "0.12240197509527206`", 
      RowBox[{"-", "0.0871826559305191`"}], "70.2208695675832`", 
      "70.22531232116259`", "0.7754899859428406`", "3.986720275878906`*^-11", 
      "9.`"},
     {"31", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "311"}], "]"}], "\<\"decayed\"\>", "1", "2", "0", "0", 
      RowBox[{"-", "0.7542455196380615`"}], "0.8965281844139099`", 
      "30.19328114478283`", "30.220101766886824`", "0.4976699948310852`", 
      "5.80226123046875`*^-9", "9.`"},
     {"32", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.4993830621242523`"}], "0.09390940517187119`", 
      "19.292543283247557`", "19.299705889895506`", "0.1349765956401825`", 
      "0.0022635335679999998`", "9.`"},
     {"33", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "1", "2", "0",
       "0", 
      RowBox[{"-", "0.30038607120513916`"}], 
      RowBox[{"-", "0.06443297117948532`"}], "58.47714609973053`", 
      "58.47810887888005`", "0.1349765956401825`", "0.004624347648`", "9.`"},
     {"34", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "213"}], "]"}], "\<\"decayed\"\>", "1", "2", "0", "0", 
      "0.3411540389060974`", 
      RowBox[{"-", "0.05014760047197342`"}], "216.13130531696942`", 
      "216.13297162532945`", "0.7754899859428406`", 
      "1.1307715606689453`*^-10", "9.`"},
     {"35", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "1", "2", "0", 
      "0", "0.1734960526227951`", 
      RowBox[{"-", "0.0008775439346209168`"}], "103.7223445085307`", 
      "103.72258351887926`", "0.1395701766014099`", "1.5808383734366864`*^6", 
      "9.`"},
     {"36", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "1", "2", "0", "0", 
      "0.2591538429260254`", 
      RowBox[{"-", "0.14324577152729034`"}], "126.57327926869576`", 
      "126.57370257968599`", "0.1395701766014099`", "2.8978819171373546`*^6", 
      "9.`"},
     {"37", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "4", "0", "0", "0", 
      RowBox[{"-", "0.04292238876223564`"}], "0.015712883323431015`", 
      "24.772008061908565`", "24.772050230964375`", "0.`", 
      "2.4004103153139507`*^18", "9.`"},
     {"38", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "4", "0", "0", "0", 
      RowBox[{"-", "0.06367010623216629`"}], 
      RowBox[{"-", "0.17874380946159363`"}], "77.14484694312041`", 
      "77.14508029102909`", "0.`", "3.767298643982941`*^19", "9.`"},
     {"39", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "7", "0", "0", "0", 
      RowBox[{"-", "0.1579873263835907`"}], "0.15079966187477112`", 
      "0.5978979007645656`", "0.6365394198775555`", "0.`", 
      "8.498891769600467`*^18", "9.`"},
     {"40", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "7", "0", "0", "0", 
      RowBox[{"-", "0.002584349364042282`"}], "0.032835837453603745`", 
      "0.0138327492826509`", "0.03572416598930745`", "0.`", 
      "5.466031760639396`*^18", "9.`"},
     {"41", 
      RowBox[{"particle", "[", "1114", "]"}], "\<\"decayed\"\>", "8", "0", 
      "0", "0", 
      RowBox[{"-", "0.1860407292842865`"}], 
      RowBox[{"-", "0.0012823939323425293`"}], "3.292339288135829`", 
      "3.520218000243818`", "1.2319999933242798`", "1.4690017700195313`*^-12",
       "9.`"},
     {"42", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "8", "0", "0", 
      "0", "0.40462952852249146`", 
      RowBox[{"-", "0.2078264057636261`"}], "0.9538787858926946`", 
      "1.0659650288155007`", "0.1395701766014099`", "8699.926556966911`", 
      "9.`"},
     {"43", 
      RowBox[{"particle", "[", "130", "]"}], "\<\"out\"\>", "10", "0", "0", 
      "0", 
      RowBox[{"-", "0.4599493145942688`"}], 
      RowBox[{"-", "0.4228872060775757`"}], "63.6609765155253`", 
      "63.665987289608594`", "0.4976139962673187`", "1.2377934943496438`*^6", 
      "9.`"},
     {"44", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "12", "0", "0", "0", 
      RowBox[{"-", "1.0356827974319458`"}], "0.24048835039138794`", 
      "6.389893180148726`", "6.477747166822863`", "0.`", 
      "7.184948981887555`*^18", "9.`"},
     {"45", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "12", "0", "0", "0", 
      RowBox[{"-", "0.07880072295665741`"}], "0.26410263776779175`", 
      "1.4642796998227439`", "1.4899915424348495`", "0.`", 
      "2.8919279703822213`*^18", "9.`"},
     {"46", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "13", "0", "0", 
      "0", "0.024096369743347168`", 
      RowBox[{"-", "0.11327451467514038`"}], "0.8153529204010853`", 
      "0.8352795757785676`", "0.1395701766014099`", "1648.010895294464`", 
      "9.`"},
     {"47", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "13", "0", "0", "0", 
      RowBox[{"-", "0.5333534479141235`"}], 
      RowBox[{"-", "0.061720579862594604`"}], "13.334776571699479`", 
      "13.346311152589031`", "0.1395701766014099`", "19069.732103651328`", 
      "9.`"},
     {"48", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "14", "0", "0", 
      "0", "0.1044374331831932`", "0.1528032124042511`", "41.81604240797787`",
       "41.81668492957292`", "0.1395701766014099`", "17147.05026514944`", 
      "9.`"},
     {"49", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "14", "0", 
      "0", "0", 
      RowBox[{"-", "0.03525889292359352`"}], "0.011202923953533173`", 
      "1.4649100742974637`", "1.4715804096902487`", "0.1349765956401825`", 
      "0.000726342144`", "9.`"},
     {"50", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "16", "0", "0", 
      "0", "0.1717761904001236`", "0.2420831024646759`", 
      "30.104607762160402`", "30.106394663523098`", "0.1395701766014099`", 
      "2.792087732946469`*^6", "9.`"},
     {"51", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "16", "0", 
      "0", "0", 
      RowBox[{"-", "0.28587669134140015`"}], 
      RowBox[{"-", "0.2943613827228546`"}], "23.509085717938643`", 
      "23.513053908011354`", "0.1349765956401825`", "0.000153585664`", 
      "9.`"},
     {"52", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "18", "0", "0", 
      "0", "0.3066191077232361`", 
      RowBox[{"-", "0.13087505102157593`"}], "2277.5874733869896`", 
      "2277.5875020628127`", "0.1395701766014099`", "3.170132815924691`*^7", 
      "9.`"},
     {"53", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "18", "0", "0", "0", 
      RowBox[{"-", "0.2624300718307495`"}], "0.1542215496301651`", 
      "811.9057559151945`", "811.9058249710287`", "0.1395701766014099`", 
      "2.5690408041358296`*^7", "9.`"},
     {"54", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "19", "0", "0", "0", 
      RowBox[{"-", "0.20148895680904388`"}], 
      RowBox[{"-", "0.038730356842279434`"}], "309.9696403079789`", 
      "309.9697082143643`", "0.`", "1.4811250184148378`*^19", "9.`"},
     {"55", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "19", "0", "0", "0", 
      RowBox[{"-", "0.12047748267650604`"}], 
      RowBox[{"-", "0.061929069459438324`"}], "97.53070686080181`", 
      "97.53080093386463`", "0.`", "1.064954360186395`*^19", "9.`"},
     {"56", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "20", "0", "0", 
      "0", "0.46733328700065613`", "0.3826168179512024`", 
      "68.12029684233332`", "68.123117351985`", "0.1395701766014099`", 
      "834331.3446695076`", "9.`"},
     {"57", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "20", "0", "0", "0", 
      "0.009725064039230347`", 
      RowBox[{"-", "0.23575474321842194`"}], "51.817647657100274`", 
      "51.81837283652784`", "0.1395701766014099`", "1.7792757581165363`*^6", 
      "9.`"},
     {"58", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "21", "0", "0", 
      "0", "0.48777279257774353`", 
      RowBox[{"-", "0.15298843383789062`"}], "24.637455297418242`", 
      "24.643153433043953`", "0.1395701766014099`", "1.3119291653640682`*^6", 
      "9.`"},
     {"59", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "21", "0", "0", "0", 
      "0.3645036220550537`", "0.39204928278923035`", "58.76690737558014`", 
      "58.7695112099364`", "0.1395701766014099`", "6.3606725676609045`*^6", 
      "9.`"},
     {"60", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "22", "0", "0", "0", 
      "0.016356516629457474`", 
      RowBox[{"-", "0.058600448071956635`"}], "2.2503456860866633`", 
      "2.251167975749331`", "0.`", "8.941570181597854`*^18", "9.`"},
     {"61", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "22", "0", "0", "0", 
      RowBox[{"-", "0.1554528772830963`"}], 
      RowBox[{"-", "0.07008987665176392`"}], "8.015624327406849`", 
      "8.017437966456688`", "0.`", "1.0555072093690165`*^19", "9.`"},
     {"62", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "2112"}], "]"}], "\<\"out\"\>", "23", "0", "0", "0", 
      "1.0131266117095947`", "0.14190679788589478`", "128.58123819695712`", 
      "128.58874045240665`", "0.9395700097084045`", "5.247366604106361`*^16", 
      "9.`"},
     {"63", 
      RowBox[{"particle", "[", "211", "]"}], "\<\"out\"\>", "23", "0", "0", 
      "0", "0.2941890358924866`", 
      RowBox[{"-", "0.04938790947198868`"}], "14.15430064204702`", 
      "14.158131686564104`", "0.1395701766014099`", "308859.72254969034`", 
      "9.`"},
     {"64", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "24", "0", "0", "0", 
      "0.11121764779090881`", 
      RowBox[{"-", "0.02036890760064125`"}], "120.22652544092807`", 
      "120.2265786082915`", "0.`", "4.3761455419362156`*^18", "9.`"},
     {"65", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "24", "0", "0", "0", 
      "0.10596993565559387`", "0.038587313145399094`", "335.33990179540024`", 
      "335.3399207591555`", "0.`", "3.4538916219060294`*^17", "9.`"},
     {"66", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "25", "0", "0", "0", 
      RowBox[{"-", "0.047429654747247696`"}], 
      RowBox[{"-", "0.12447204440832138`"}], "41.444429224402754`", 
      "41.44487828951503`", "0.1395701766014099`", "256623.48848214836`", 
      "9.`"},
     {"67", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "25", "0", 
      "0", "0", 
      RowBox[{"-", "0.14576788246631622`"}], "0.022177480161190033`", 
      "633.9617557579191`", "633.9617872730666`", "0.1349765956401825`", 
      "0.24896159744`", "9.`"},
     {"68", 
      RowBox[{"particle", "[", "310", "]"}], "\<\"out\"\>", "27", "0", "0", 
      "0", 
      RowBox[{"-", "0.6830242276191711`"}], 
      RowBox[{"-", "0.10008512437343597`"}], "73.09335674682163`", 
      "73.09831023583959`", "0.4976139962673187`", "3963.255160569856`", 
      "9.`"},
     {"69", 
      RowBox[{"particle", "[", "310", "]"}], "\<\"out\"\>", "29", "0", "0", 
      "0", "0.322968065738678`", "0.13193200528621674`", 
      "110.95565471417294`", "110.95731903378685`", "0.4976139962673187`", 
      "10471.820683640832`", "9.`"},
     {"70", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "30", "0", "0", "0", 
      "0.029053032398223877`", "0.32031574845314026`", "31.28560472711416`", 
      "31.287569244554987`", "0.1395701766014099`", "314619.41113257984`", 
      "9.`"},
     {"71", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "30", "0", 
      "0", "0", "0.093348927795887`", 
      RowBox[{"-", "0.40749838948249817`"}], "38.93525864961404`", 
      "38.937736885359264`", "0.1349765956401825`", "0.000604792064`", 
      "9.`"},
     {"72", 
      RowBox[{"particle", "[", "310", "]"}], "\<\"out\"\>", "31", "0", "0", 
      "0", 
      RowBox[{"-", "0.7542455196380615`"}], "0.8965281844139099`", 
      "30.19231507462385`", "30.219135631979654`", "0.4976139962673187`", 
      "2383.27601037312`", "9.`"},
     {"73", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "32", "0", "0", "0", 
      RowBox[{"-", "0.27021893858909607`"}], "0.0955142229795456`", 
      "8.819473714616281`", "8.824129296671208`", "0.`", 
      "1.1514713933638527`*^18", "9.`"},
     {"74", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "32", "0", "0", "0", 
      RowBox[{"-", "0.22916412353515625`"}], 
      RowBox[{"-", "0.0016048140823841095`"}], "10.473068978273917`", 
      "10.4755760029999`", "0.`", "1.251138366028441`*^19", "9.`"},
     {"75", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "33", "0", "0", "0", 
      RowBox[{"-", "0.06905078887939453`"}], 
      RowBox[{"-", "0.05980285257101059`"}], "10.225558040926948`", 
      "10.225966049277996`", "0.`", "7.531173851829898`*^18", "9.`"},
     {"76", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "33", "0", "0", "0", 
      RowBox[{"-", "0.23133526742458344`"}], 
      RowBox[{"-", "0.0046301186084747314`"}], "48.25158811654378`", 
      "48.25214288725986`", "0.`", "7.475205422085019`*^18", "9.`"},
     {"77", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "34", "0", "0", "0", 
      "0.40674889087677`", "0.12420473992824554`", "193.07215569085992`", 
      "193.0726745410326`", "0.1395701766014099`", "2.8830167948077302`*^6", 
      "9.`"},
     {"78", 
      RowBox[{"particle", "[", "111", "]"}], "\<\"decayed\"\>", "34", "0", 
      "0", "0", 
      RowBox[{"-", "0.06559489667415619`"}], 
      RowBox[{"-", "0.17435233294963837`"}], "23.059135400734714`", 
      "23.060282859003745`", "0.1349765956401825`", "0.00338329472`", "9.`"},
     {"79", 
      RowBox[{"particle", "[", "2112", "]"}], "\<\"out\"\>", "41", "0", "0", 
      "0", 
      RowBox[{"-", "0.161956787109375`"}], "0.2185240089893341`", 
      "2.4432138480127636`", "2.6317424747988456`", "0.9395700097084045`", 
      "4.821618267021036`*^13", "9.`"},
     {"80", 
      RowBox[{"particle", "[", 
       RowBox[{"-", "211"}], "]"}], "\<\"out\"\>", "41", "0", "0", "0", 
      RowBox[{"-", "0.024083953350782394`"}], 
      RowBox[{"-", "0.21980640292167664`"}], "0.8491252425251552`", 
      "0.8884753250734211`", "0.1395701766014099`", "110771.57025061273`", 
      "9.`"},
     {"81", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "49", "0", "0", "0", 
      "0.020846467465162277`", "0.024738283827900887`", "1.2008912749940566`",
       "1.2013269381185858`", "0.`", "4.628106234482838`*^18", "9.`"},
     {"82", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "49", "0", "0", "0", 
      RowBox[{"-", "0.0561053566634655`"}], 
      RowBox[{"-", "0.013535360805690289`"}], "0.26401917812394743`", 
      "0.27025385002941144`", "0.`", "1.9900026669139018`*^18", "9.`"},
     {"83", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "51", "0", "0", "0", 
      RowBox[{"-", "0.09514325112104416`"}], 
      RowBox[{"-", "0.1304430514574051`"}], "12.786418514981564`", 
      "12.787437822651214`", "0.`", "1.5654508584326711`*^19", "9.`"},
     {"84", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "51", "0", "0", "0", 
      RowBox[{"-", "0.19073346257209778`"}], 
      RowBox[{"-", "0.16391834616661072`"}], "10.72266844200012`", 
      "10.725617324658755`", "0.`", "3.0305210397315717`*^18", "9.`"},
     {"85", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "67", "0", "0", "0", 
      RowBox[{"-", "0.0036324895918369293`"}], 
      RowBox[{"-", "0.03027348592877388`"}], "246.63008223815802`", 
      "246.63008412292191`", "0.`", "5.835945532017089`*^18", "9.`"},
     {"86", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "67", "0", "0", "0", 
      RowBox[{"-", "0.1421353816986084`"}], "0.052450962364673615`", 
      "387.3316323243562`", "387.3316619547393`", "0.`", 
      "2.1054664163666578`*^18", "9.`"},
     {"87", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "71", "0", "0", "0", 
      "0.1116020530462265`", 
      RowBox[{"-", "0.39066335558891296`"}], "37.91199769661955`", 
      "37.91417468736634`", "0.`", "2.74820754440043`*^18", "9.`"},
     {"88", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "71", "0", "0", "0", 
      RowBox[{"-", "0.018253125250339508`"}], 
      RowBox[{"-", "0.016835011541843414`"}], "1.0232596339691635`", 
      "1.0235608788468447`", "0.`", "1.0528452756068071`*^19", "9.`"},
     {"89", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "78", "0", "0", "0", 
      RowBox[{"-", "0.061938412487506866`"}], 
      RowBox[{"-", "0.020059961825609207`"}], "10.452702042590232`", 
      "10.452904800110826`", "0.`", "1.7539682119991552`*^19", "9.`"},
     {"90", "\<\"\[Gamma]\"\>", "\<\"out\"\>", "78", "0", "0", "0", 
      RowBox[{"-", "0.003656480461359024`"}], 
      RowBox[{"-", "0.15429235994815826`"}], "12.606432300611866`", 
      "12.607377001267865`", "0.`", "5.992219141478303`*^18", "9.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print"]
}, Open  ]],

Cell[TextData[{
 "We can obtain the total cross section by running the crmc code with an ",
 StyleBox["-x", "Input"],
 " flag. Then, the cross section ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "(", 
    RowBox[{"pp", " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Pi]", "0"], "+"}], "..."}]}], ")"}], 
   TraditionalForm]]],
 " can be found by multiplying by the ratio of number of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "0"], TraditionalForm]]],
 " produced and the total number of particles."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindParticles", "[", 
  RowBox[{
   RowBox[{"eventList", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
   RowBox[{"particle", "[", "111", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "7", ",", "19", ",", "22", ",", "24", ",", "32", ",", "33", ",", 
   "49", ",", "51", ",", "67", ",", "71", ",", "78"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n\[Pi]0", " ", "=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"FindParticles", "[", 
       RowBox[{
        RowBox[{"eventList", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
        RowBox[{"particle", "[", "111", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "Nevents"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "=", "79.95"}], ";"}], " ", 
  RowBox[{"(*", "mb", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]pp\[Pi]0", " ", "=", " ", 
    RowBox[{"\[Sigma]", " ", 
     RowBox[{"n\[Pi]0", " ", "/", " ", "Nevents"}], " ", "*", " ", 
     SuperscriptBox["10", "9"]}]}], ";"}], " ", 
  RowBox[{"(*", "pb", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\[Sigma](pp -> \!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)) = \>\"", ",", 
   " ", "\[Sigma]pp\[Pi]0", ",", " ", "\"\< pb\>\""}], "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Sigma](pp -> \\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \
\\(0\\)]\\)) = \"\>", "\[InvisibleSpace]", "9.594000000000001`*^11", 
   "\[InvisibleSpace]", "\<\" pb\"\>"}],
  SequenceForm[
  "\[Sigma](pp -> \!\(\*SuperscriptBox[\(\[Pi]\), \(0\)]\)) = ", 
   9.594000000000001*^11, " pb"],
  Editable->False]], "Print"]
}, Open  ]],

Cell[TextData[{
 "Then we can use the result from Feng et al. (1708.09389) to compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "(", 
    RowBox[{"pp", " ", "\[Rule]", " ", "\[Chi]\[Chi]"}], ")"}], 
   TraditionalForm]]],
 " cross section as a function of the vector mediator mass ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", 
    RowBox[{"A", "'"}]], TraditionalForm]]],
 ".\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sigma]", "(", 
     RowBox[{"pp", "\[Rule]", " ", "\[Chi]\[Chi]"}], ")"}], "=", 
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Epsilon]", "2"], "(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           SubscriptBox["m", 
            RowBox[{"A", "'"}]], 
           SubscriptBox["m", 
            SuperscriptBox["\[Pi]", "0"]]], ")"}], "2"]}], ")"}], "3"], 
     RowBox[{"B", "(", 
      RowBox[{
       SuperscriptBox["\[Pi]", "0"], "\[Rule]", " ", "\[Gamma]\[Gamma]"}], 
      ")"}], 
     RowBox[{"\[Sigma]", "(", 
      RowBox[{"pp", "\[Rule]", " ", 
       SuperscriptBox["\[Pi]", "0"]}], ")"}]}]}], TraditionalForm]]],
 "\nAssuming the branching ratio of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Pi]", "0"], TraditionalForm]]],
 " to \[Gamma]\[Gamma] is approximately 100%, we then see the following \
plot;"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"m\[Pi]", "=", "0.135"}], ";"}], " ", 
  RowBox[{"(*", " ", "GeV", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]pp\[Chi]\[Chi]", "[", "mA_", "]"}], ":=", " ", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", 
        FractionBox[
         SuperscriptBox["mA", "2"], 
         SuperscriptBox["m\[Pi]", "2"]]}], ")"}], "3"], 
     "\[Sigma]pp\[Pi]0"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    SuperscriptBox["\[Epsilon]", 
     RowBox[{"-", "2"}]], " ", "pb"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"\[Sigma]pp\[Chi]\[Chi]", "[", "mA", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"mA", ",", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]], ",", " ", "m\[Pi]"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]], ",", 
        SuperscriptBox["10", "0"]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", "5"], ",", 
        SuperscriptBox["10", "13"]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(m\), \(A'\)]\) [GeV]\>\"", ",", 
      "\"\<\[Sigma](pp -> \[Chi]\[Chi])/\!\(\*SuperscriptBox[\(\[Epsilon]\), \
\(2\)]\) [pb]\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "16"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<\[Sigma](pp -> \[Chi]\[Chi]) at 14 TeV\>\""}],
    ",", " ", 
   RowBox[{"PlotStyle", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"RGBColor", "[", "\"\<#2E9278\>\"", "]"}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.1803921568627451, 0.5725490196078431, 0.47058823529411764`], 
      AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
ebGcCfwPC+onZA==
       "]]},
     Annotation[#, "Charting`Private`Tag$614#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->NCache[{-Log[100], 
     Log[100000]}, {-4.605170185988092, 11.512925464970229`}],
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[Sigma](pp -> \
\[Chi]\[Chi])/\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\) [pb]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(A'\\)]\\) [GeV]\"", 
      TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{13.815510557964274`, 
        FormBox[
         TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {18.420680743952367`, 
        FormBox[
         TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {23.025850929940457`, 
        FormBox[
         TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {27.631021115928547`, 
        FormBox[
         TemplateBox[{"10", "12"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {16.11809565095832, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20.72326583694641, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {25.328436022934504`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {29.933606208922594`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {32.23619130191664, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {18.420680743952367`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {23.025850929940457`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {27.631021115928547`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {16.11809565095832, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20.72326583694641, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {25.328436022934504`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {29.933606208922594`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {32.23619130191664, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{-4.605170185988091, 
        FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-4.605170185988091, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->(FontSize -> 16),
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Log, Exp}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Log, Exp}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\[Sigma](pp -> \[Chi]\[Chi]) at 14 TeV\"", TraditionalForm],
  PlotRange->NCache[{{-Log[100], 0}, {
      Log[100000], 
      Log[10000000000000]}}, {{-4.605170185988092, 0}, {11.512925464970229`, 
     29.933606208922594`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PZ6terzN7nez+vvVfrZ7P2o7+/v7px/HTo3nT3k92u7917bnLsSdiLsRv90Z
yKH/TPjvB/894dde/HeH2FwMBgMkEonQ+Pd7nd12PNs9Hv43wv9WNvvvZbOP
Y7P6+9V+fnW/rTq/hIPd9vf7q+y249ip8fwpr0fbvf/aeSWHJn7EmkPzzzD4
NRixufDPgUJCQoTm7GdCu5nddjzbPR7+N8L/Vjb772Wzj2Oz+vvVfn51v606
v4SD3fb3+6vstuPYqfH8Ka9H273/2nklhyZ+xJpD/8zvCuE8er0e586dExr/
fq+z245nu8fD/0aioqKEtpl/L5t9HJvV36/286v7bdX5JRzstr/fX2W3HcdO
jedPeT3a7v1/xYvIof9MyKG3lvn5eeGzI97493ud3XY82z2egYGBj/EM/v1m
sdnHsVn9/Wo/v7rfVp1fwsFu+/v9VXbbcezUeP6U16Pt3p8cmnAWcuitY6O6
7Ht5XZvddjw7MZ6tiDdt9nFsVn+/2s/vPP5uiy/+k9htf7+/ym47jp0cz5/w
erQT+5NDE85CDk0QzrPb4l//NOj8EoTz0N/L1kAOTTgLOTRBOMdui3/906Dz
SxDOQ38vWwc5NOEs5NAEQRAEQRAOyKEJZyGHJgiCIAiCcEAOTTgLOTRBEARB
EIQDcmjCWcihCYIgCIIgHJBDE85CDk0QBEEQBOGAHJpwFnJogiAIgiAIB+TQ
hLOQQxMEQRAEQTgghyacZe13RSaTQa1W7fRwCIIgCIIgdgxyaMJZ1n5XYqJl
MOo1Oz0cgiAIgiCIHYMcmnAWpVIp+HNYRBTqmjpgHF2AemgSgwbbtjblWjPy
Nv4bzdGPin2vHZqAfmQSJssUhqzTm9aGR79uQ6OO+0bGZmAdn8XY5BzGp+Yx
Me1o47/YJqYXMDWzgJk5OxYWl7BoX2Zt6aca38++tLzTv2oEQRAEseshhyac
hedvJCXGwV0UiND0+5BebIb0fAMkeXXb3F5Bdp61/HpE/0bj+/N+4i41IK2o
GWfuvUFB6Xtcq/iAq+VdKPzFxve9yvq4VvkBRULrXm0fPjb+GLee9qCsfhDP
2jR41aFH43sjGjoNv9TqWXvdZcSbvmH0qkeF64GRNW+3OteGrFMwmqcwNjG3
079qBEEQBLHrIYcmnEXDHDpZHodDx/xxRHodx1Ke4VhSNY7JK7enJVUJ7Whi
JQ7HleNQbBkOxJTiQPSvt/2yUriyvkSp1QjMfgYxc/SYC8yxL/yOm78S+ok8
+xJhZ2oRmvNitdWuthcIOf0CUex++ZXXyLzZKvj7uQfvWHuLs040vt25h+8c
bfW28486cKWsC3ee9qKiYRBPW9R40qzCk6YvWvOn9rRZ/bHxn6tfq/DyjQ7v
FWYo9J/i/t+O/zu+57F8zdAEjBvF8X8i7s5/nppdxPzCWhx9ecM4+crKyk7/
ORAEQRB/OOTQhLOoVUokxsdC5BOM1IsVyC/pZg7X6ZTzbUbjrpjHnPHUnXYk
FDRCfO4lwrmjnv7SUZ1tjv2453Lf5d7L/feXY9vMu7l/8364j3Mv537OPX0j
fz8YU4bD8eVwT6xYd43w42uJ42w7j+QqeKZUf9W8Up/AJ/0p/DNrEJj1DAHf
aHx8QdnPEXzq88Zv4+eTn4+fif/z40691owLjzuE+PvVCkc8/tpPxt35be/6
R4TcGjNz7vVxdB4n57k2Vtus4NgEQRAEsZOQQxPOolIqERsbjcCQCDysbkJb
/yhefxj65fyDn22N7x35CrVvdCh5pcBt5mTXqz7Pkfi59inHwuF9v5/DwV2R
54PwuDLPD+F5It/yTn6blN3Hm7N5LHzbqHN1CGPXAF/675oDB2V/2515437t
e/IpvNOeQMTdO/lzD/dgPx9f7/M/iv/HOK4HuNdH5r5E7MUGwan5WCPYz87G
3fnP/BqJn8eyegVqhDj6aix9LU7epMKLNi1au034oLRgQDcmxMB5PPxbee0j
o5/Hv4WYN/t/cmZhXbx7CXb2//IyxbcJgiAI5yCHJpyFzynkde2ixBJ0dvVi
kenG9NzSL8+B+/k5c455czbmPxbmRCOrccqhDebt/WzbzHmE3N+4x3GfE/zu
m/MfP+VHODWXkm2vNo2jR21FI7umqGnRfMzB+DIn41s5HPz+ikYl7j/vF64d
8h93bJAb8qXbfj/+z32eN+7L3Ju5P3OP5j7NvZr79Tfj7qv/r4+tc7f3z/gU
R+f/r4+Zcx/njx+1Gitfuw75LK+9pNOR175B/Jtfj/H/23qHhPwTHu/mMW6L
bQbTs4ugNBGCIAjCGcihCWdZXx9aq6H60DsJj6Hy+OrwWv0PJxufZ2gwTwrx
206FGU0fTKjv2Jz4vxDLF+ZTOnI4eF4Hz+9Yyy/neTJfx91fMSevY/7tyK1Z
i6Wv92c/5tPcq9fHyblvH1918CMJFYKfu8aWCXF1vv9a3ong2uc+j3/z64Lc
+475o6WvVuPd7BrjWasGr98b0TEwgn6tI769UZ43v3b7GNNejWfPztuFmDbV
NSEIgvhzIIfe42wUM1sfSPuJmNqPNv3k0FKoVErnOyY2HZ5z8Cu16/g+3PO4
8/GYK4/rf8xv+M34/5fxeO6dmrVY/AZx97W6gn3aUbT3DqH+nV7w2E9xc7Xg
tzyvg7t53ro5lGuN+/DJGy1CDjqPT/NYOPdn7u1rcXDu1m48/s1c++i6uDfP
V/dbjXevxbp5PJ3vx72eu360kOfd9CnPm43jTk2vMF+zvkMvxLNbuofYMYwJ
nzsYRiaprglBEMQfAjn0XmcRy/ZpjButsBrGMMnjYezW9ZGwZfssZi0GjGoV
0CgHoVAMYlChwKBaB8XQJIwTdiwu/Vi2aa1vYqvgfs9dXsirWI35ci/nP3M3
5fMMN5qDyGv6PW1VC167lo/OW9EXcXDZ+U8xcO7HPD7NnZvPrfTPdOSI+5x8
KsS5j6/P/2bu7ZlSJcyx5DnsfD8eP+fezmPZufff4mJJJ+4+60Np/SAqG5Wo
e+uoazKoX83RHnbEsfm1x+jEWk2SBeEahseulyhuTRAEsSchh96jCMrL33vN
mBl9j/r8clScfY43+jHo2a3z6zactw1AUXIOlRkRSI8VIyJKDHFkBMRJpxFR
1IpLTaOwTNt/+JDk0MRWwX+dl5YdtewW1sXMeeOeOSXEzDeOk/O8ihEhp/k7
cfDVfHL+fa9mFM0fTKht1wpx7qrXSiFfmnvwxeJOwYt5zDv7dhtiLtYLczg/
i2vHlQn5I0KNlGRHPJv7N3dx7uRrdU147kp8QSPz7VbB57nnV75Woe6dXnj8
rkGzcH1gY+Pnx04QBEHsLcih9yq8Ru4I8+d6dD27jXyfXJwKu4tqxQgU7N5Z
vsnKHLCowlBPFUpzE9j9fogTR0IsFUMmCUV4dDw8k65DfrMFHdpJLOD7+Rzk
0MQ/BZ7LMrqal8LngOqGJ4V8jJZuR344z4t+8UaLh7X9H3O/v4xrr6+PwvNA
eCyb1xbkcWyeM8LnTronVjLHfiLEvIX6f0XNyLn7RujrBuuX52Pzetxv+4bR
x9yeOz6fj8qvAcw2Ry0Rnm89M+9Ye5LqYhMEQeweyKH3GMJbKK+Na8G0tR4N
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
Bj3GwSFGlSyvG1GO4aHN+g3lUM9nyzE0tFnXoRtRHjvCyLaPV2s5dAwMjDNq
nJNajq9IMrQQ4qBQ9xFee9rKuYQX2gzwyKxGbf63EELs1LfI0GrlyIbyvl89
/tjgJ6Wz3x3J0EKIg8I8v0Jh3RDhGQ1anzuP5CpetRu1PtIbG/IXlBDiy75F
hl5XLkfWlWWWV6xKdv5GezZW15Rj6wq0XBV3RzK0EOKgsK7YaBuYJru4k9+i
SrW9hY8reukfNWuzC4UQ4kv2NkMr+dWxxJJlkt62Tjrb+5iaW2FlF+e7E46V
OZZ627B0tWOaWcRiA7sE6F2TDC2EOCjs9g1MlmUqWka5kFSl9bm7/LCF6rey
t1AIsTN7mqEdVljpZLK9iPvxaaRdekRJt5m+jc1JhXtjA5u5m56H8VSmJ/H0
1RhVRrDIpsJdkwwthDhoekZmCU6v5+fwYnzTanlQ3sO0kq2FEOJL9jRDb8yD
tR59fTqXXTzxPhNFalkHzw1L6EwW5s0zmGdntD7VuztmlcOM2WJifsmArr2U
4shTpPt7kFgwwCPly5ra68XvQ0AytBDioJmYsXLlyVtOx5ZzKraMpIctjEzM
O/u0hBDfgb3N0Auw1ISx8RZXvV3xOulGWPodUorLyCkq4XlREcXKUfSVjuKS
Ip6XFfPkdjrJrr8R4xVAYuEwz3Rgkgy9a5KhhRAHzczcMk+r+wm5Wa/NXPG/
9pLW/inW16WbkxDi875Jhm66yTXfs7j9fJQLgYF4xcYQFh1FdGQkUcoR+ZWO
qKhoomNiCQsIxOPnI3i7BRFbMEz+iHKdlPK2XZMMLYQ4aBaW1njdPaHNLVR7
3J2Lf8GL5hGmLUvaPBYhhPiUva/laMDQcJ0Uz1Oc+n//4ueffuLI8eMcPXaM
Y3txKM/9y09H+OH/+7+cOO9PeN4wT4dlHfprkAwthDhoPp5beDzyOVnFnVrP
DrXPnRBCfMre7ilcgpUuTN2F5F1P4lJAMBHBwYSEhOztERxEcKA/sSm3yK4f
p24c5mRP4a5JhhZCHERqP2i1fsMntYafw0uIudPE80Yd5gVZfBFCfNre9rZb
Vy5OVmzWGUxGPWPDOkaUQ50vvqfH8DDDw0OMGsaZUMKzmp+lt93uSYYWQhxU
QwYLFzMbtHoOjyvVWt9odX1aCCE+Za9nrOyP6Lo/zuJ7JxlaCHFQqf05rj1r
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
x+oC8yYjk0Od6NuqaC+/S8GNSJJDPXBTMvKJU0pOdnPH09tHOfyVrByIf0Ag
gYEByuGDv7+3cps3Hu5uuJ8/haeSr/09QomKuMHVO2XkVbfT1q/HaJpn1mpj
2fb3z1J8mmRoIcRhN7e4ystWPcmP3yoZuhiP5Gpa+6dwOOTnoEIcNnudof+4
qjhmWR1t5NWjRDKjLhDucw4fJS8HeIUTEZpGSvIjHjwopbr6Jc2v39LQ2E/L
Gx19fTp0uj7leENffyMtb1/T8LKa5tIH1DxKJictlOvhnkRdcMXfLQivqFtE
36uh4O0Efab1Lf2i5Qq3O5KhhRCH3bx1jVftRtJy3mk9otX+dg3K75eWbWxI
PaEQh8qeZmiH2kdjHvvMCOauBtqf3+fulRAig1zx8vPCOziKuEt3uX2nisrK
Hnp6JjDPzrGyYsdqVT507cMnU39jZc2+wtKckscnepjtqaSr6g4v7l4iOzKI
WD8lQwcn4p94h+uPy3ne0EWPYY7ZZQd2KfPYNcnQQojDbnFpjZaeSa0v9K+R
z3FNrKSyZZTZuWXs6/IXjRCHyZ5m6DULGKuYqrjJw7AoJeMmkXDvObfqWynv
6adtdAydfoqpSQsWyxJLSzbs9vU/Wttt/dGY+psN5d8ONtbtOGxL2JcsLFkm
sUzpmdIrz9XdQevLEl48vsrtOE8uJygZ/VkrD9tXmLLK+sBuSYYWQhx2Sys2
uoZnuF/WzcnoMs4lvKCkYZhx0yJrtnVnn54Q4hva2ww9C4bnTFReIyviEjHR
98muH6FG3U7IXtRWKAl7po/x18+oygwlMzWemCdtZL1eZmJB1gd2SzK0EOKw
W1mza304nlb3czq2nDNx5TyrHUA3PqfcJxlaiMNkTzP0xjKsDmI1d9I9Mkzr
yDT6uVXm7ZuVGXvCvoxt0cTcpI4x3SitfYt0j25gXdmrT3h4SIYWQhx26lqz
YWqB4vohzsa/4GRMGY9e9NI7Osvyqt3ZpyeE+Ib2dk+h+p58Qfn3ElblV8t/
3K6uQK+wsb7M4qKdxT2ss1heBOu8ciZyads1ydBCiMNOrXmesSxT+XqE85cq
+C2qlDvPu+gYNGFdkWZQQhwme5uh1Wy8rlYwa/0x/qymUBeFdSwsDvCmbZbW
Dps2nnDLh30lG+ubh7Qd2j3J0EKIw07tvaHWRDd0GHFLqtT2FWYWdvCub4pF
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
owrHJZlQy07j8msbXs8K136gN8554WdrboCh8STSEkoQl1ojtBPH99dfjtR5
fMLrTHXQ1Z+EOp4ZmkJsV7UXJ3RYzdDzo/34eDUVd478B7lqFVJUOUhRqiEV
3/f+XM9VAlVmPtLONeHM02H0Wqf873/LkRyPjlT9rhHw2wu2H4lCeYn+FOHr
b1roRz5stR8RD7DM9vKlbfU/azBDR4l4n631AQwPjiM7SY14+WlUvbLhzYxw
TQdaFla8pk0N0DeWID3xCA4qzuPSOzu6F4Cpjd5rI3Yep/D7m3DtNQhtjhma
Qm3XtJcLwnnG0Lsszhscw6TpIR5lH8axH/6LfftLkFh0H/de9qHPYoTGoIdB
b4DBZMHA+xdov56LOxcLhfe/AdwdWsJ4JG/hiVT9frccQfYjO6W8FJsidv2J
Ey3sGDc8xIOt9COfVjDuf1C1WzjMQ7aX79lCjmGGjpI54WelF35WdQVQJ6rw
u3BNn/veNW0UrumGImQkKrBfXoGzXVa8nPrG/pE+zzwzNIXRrmkvlcJ5Rvzj
O3PCe9/MSBuenynFOVUhMgsaUdmggWY6wJvQjB2ex0fQfjYJaaceI6dxBEPj
Ebx7J1L1+z3B9iM7pbwUmyJ2/YlXvQUeWxvaTm+hH7nvwJBX/IKQoU31QpHZ
Xja0hRzDDB0luyYTMEPTDrBr2ouYoW14NS0+WcwHLHowYbPArjPDYHLB6prF
bKDjiPMP+y9j4PYxqBQXkVLYjharF8LREZFVWXdKJmWGpt0gYtef+MV5+OY9
Qo7eQj9S1IGW0TkIvZB/boZRKG8a28u3MUPvHrvmb9NBnocZmsJpN7aXjd5r
vizDohsYfQzzo1PIOpyLeGk1rveN+J9DNv29ugmFnTI3Ith+ZKeUl2JTJK+/
jb7+vX5EdgXXB9wY9AkFsz+G9eFxHGV7+TZm6N1jV90jFcR5mKEpnHZhe5nd
1Pc3IZygC9bOszghiYc86SiOPzbicaSesbtT7tELth/ZKeWl2LRTr7+v+pE8
HH9qwzPrIuacXRjrqsJJ6Q4q707DDL177LK1ur57HmZoCqe91l6+tDIlHOst
bG+qcFZxEGmJGShp1KNROJArEg1op6x9FWw/slPKS7Fpp15/X/YjSZkoabKg
ybCEGc87ON9W44x8B5V3p2GG3j124TMjOA5NUbOb2otudW27wOPQ3/hD6Irw
njz3BrbXl4X3OCUyJSU432ZGm1t4j4vEhOid8gyGoDP0DikvxaYIXn+Be4xg
+5EynH8+gg6XDwsTb+B4dQ6VMraXb2KG3j124bOLNzwPMzSF065pL0/xxOTx
n2cJM1iacmDMbITFZMOYdwETwsl9gd7+xL8NT3bC2nEJZSk5UMvO4fo7O977
xHsTI2CnPAs42H5kp5SXYlPErr8lIa9PYWHL/cgFXO92oHdxGb6FAbi6r+Iy
28u3MUPvIuLgkhNu3TM8LoxHpVKKrJsfUPVB+GyAdWEXvVY4H2fhaWUc4nKv
Q1r9EX0jwSwgG6HzMENTWO2S9nJ5AH1j4sCOcNXPf8BYbw1ulubieMEZXO8c
xQsH/O9/Xx9oHBh9BNOj08g8XIRE2XXUDo3hEzY5r3rLIlW/3xF0P7JDyksx
KkLX37KQ1Wd7/f3IjS31IzdQ+8kJDcQ07sak/hmesr18GzP0LrOEWccHfLqe
iboCBdQVTchvMmPA6fviLzWLmDG+xeuLClwsSIH0YguK2l2wBv1H3gichxma
wm43tJdxWCfEr80JX+6H/U01quT/ReqhRKivf8SlfsARqEH416SqxsCtfKgU
F5Bc2IpnFg8ciOS4T6TqdwOb6kd2QHkphkXg+lsRcuv8R4xsuR9pwzOzV0j7
4uyPZcwL5R1me/k2ZujdZ9qKle5L6L2aCZkkDwdz7qB2cBKGP3cQ3kEnX8HZ
fg6lshQkCvsUP/mEB5u9Xz/c52GGpkjY6e1ldO15ljFleoN35w7hYtbvOFjR
jKynkxgJNLA8Y8f4w3S0nk6A+tSj1WesuKLwV9Mw1+93l8XabD8SqeuBKJCI
XH9LoetH2F42xgy9+/imgPFXGH1+EZXpKigUuSipe4GaPht6dFZYBt/C3noO
HdX5UKeVQlZSj7pBN7RLn+f2i+9Ky1hamMLUqBFjJgN0NjfM7nnM+5ZDeJ7v
EK89w13o6sqgOlSGQ6q7/nurDGCGphDaZe3FN+mA64Ww341sZFVeQfblZnS+
74dVOK9Br4NOr4feaMFgTxde3i5E49UynHs2GPlnfYfs+w6yfr9ls/1IuPs1
oo1EqL2ErB9he9nYFnIMM3S0iW1oAfP2PmgbitBQGgeVSoZfk1WQKJRQSeWQ
H0xBRkYZyhq7UTc8BdP0sn821uqYjtjOZjE92oPea8dwqygbaeefofSZVWiH
CyE8z3eIf0PS34amthCSfYXYJ7mNWo1j79/HSxG2y9rLyjKWZz1wDHfhxY0c
XMk/gJw0CaRy4f1LKb6HCceRJCMjtxgn7r7EvW4XBsfm4RU67OWoPMsgUvX7
DZvuR8LcrxFtKELtJWT9CNvLhraQY5ihd4iFCUDTAO2DQlQWpEEqlQntQga5
PA0SSQHyK+rRpJ3yr3G+flbSJt+zNn2eIFvOggewt8Hafgunim6h6FQb2q0e
2MUvbadeiALZDe1l5a+PV2bdcL84i1cXk1GcJUeyVAm58J6lkMsgS05AVtEp
nH8xjg7n+r46au9bkarfr867xX4kXP0aUTAi1F6214+suebZXgLbQv/DDL1D
rCwJTcmFuXEzrCY9tBottFpx00GjMcFodWJ8bsnfLr6+mjfxt9NtnWej8vv8
19+8dww28xjMNo/wO7DPf93FSOujSNpt7WXZB9+EDZMjGpgNWgz/eRyNcJxh
GExW2Lw+eBd3SHuJVP1+dd4t9iPh6teIghGp9hKqfoTtJbAt9D/M0DvBZq7S
APtu8PKVDf5r0+fZyitiqgFSZOy29hLedhd6karfTeyzcSAI4qhb2ZcoGOyP
9pLN9j/M0EREREREm8MMTURERES0OczQRERERESbwwxNRERERLQ5zNBERERE
RJvDDE1EREREtDnM0EREREREm8MMTURERES0OczQRERERESbwwxNRERERLQ5
zNBERERERJvDDE1EREREtDnM0EREREREm8MMTURERES0OczQRERERESbwwxN
RERERLQ5zNBERERERJvDDE1EREREtDnM0EREREREm8MMTUREIbUibMvC/y0t
Y2V5Gcv+bQkrK8t/fJH+qCR/nSz/UUcrK6wbot2EGZqIiEJKzM8zc8DUNOan
ZzA9M43p6SnMz80I0XF549duJUaGI3pudMzNnO+b+wr1g2nMzQv1MzUjVNU0
FubFz32nfohox2CGJiKi0FnB8qwXs5p+jL7twofXXXjR9RKdHa/Q3TsEm2cG
MysbJcUlrPgmMGEzw64ZhkGrhUbYtH9uGmj1JmjN47C65jAXtsi5jKXFKUyN
WeAwGmDSj8JiF8q1uIRFbCZGC/Xhm8Gs04pxmwWmsSlYnC5MOnsxbu5E7/su
dHS+FOqoCz0fB2BxzQjnEGqBQ9JEOx4zNBERhYYY/OYw4+jHQG0FGvKkKFCn
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
EGJr/iaEEEIIIYTYsn8DtYVuqw==
    "], {{0, 509}, {721, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{372., Automatic},
  ImageSizeRaw->{721, 509},
  PlotRange->{{0, 721}, {0, 509}}]], "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{960, 1101},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TrackCellChangeTimes->False,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 108, 1, 70, "Title"],
Cell[691, 25, 312, 7, 121, "Text"],
Cell[1006, 34, 75, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1106, 39, 114, 1, 26, "Subtitle"],
Cell[1223, 42, 9953, 254, 1552, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[11213, 301, 118, 1, 26, "Subtitle"],
Cell[11334, 304, 95, 1, 33, "Text"],
Cell[11432, 307, 8002, 196, 968, "Input"],
Cell[19437, 505, 97, 1, 33, "Text"],
Cell[19537, 508, 4119, 100, 609, "Input"],
Cell[23659, 610, 305, 7, 99, "Text"],
Cell[23967, 619, 691, 15, 88, "Input"],
Cell[24661, 636, 6001, 135, 902, "Input"],
Cell[30665, 773, 10792, 239, 1688, "Input"],
Cell[41460, 1014, 531, 13, 112, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42028, 1032, 89, 1, 26, "Subtitle"],
Cell[CellGroupData[{
Cell[42142, 1037, 536, 13, 66, "Input"],
Cell[42681, 1052, 251, 6, 44, "Output"]
}, Open  ]],
Cell[42947, 1061, 28935, 715, 4454, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71919, 1781, 91, 1, 26, "Subtitle"],
Cell[CellGroupData[{
Cell[72035, 1786, 100, 1, 35, "Subsection"],
Cell[72138, 1789, 13364, 350, 1451, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85539, 2144, 92, 1, 35, "Subsection"],
Cell[85634, 2147, 9784, 224, 1345, "Input"],
Cell[95421, 2373, 8093, 185, 1025, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103563, 2564, 159, 3, 26, "Subtitle"],
Cell[103725, 2569, 195, 5, 55, "Text"],
Cell[103923, 2576, 21877, 586, 3142, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125837, 3167, 124, 1, 26, "Subtitle"],
Cell[CellGroupData[{
Cell[125986, 3172, 27390, 708, 3472, "Input"],
Cell[153379, 3882, 345, 7, 23, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153773, 3895, 116, 1, 26, "Subtitle"],
Cell[153892, 3898, 7877, 181, 999, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161806, 4084, 148, 3, 26, "Subtitle"],
Cell[161957, 4089, 15222, 362, 2225, "Input"],
Cell[177182, 4453, 1608, 43, 217, "Input"],
Cell[CellGroupData[{
Cell[178815, 4500, 54, 0, 62, "Section"],
Cell[178872, 4502, 1033, 29, 339, "Text"],
Cell[CellGroupData[{
Cell[179930, 4535, 819, 22, 113, "Input"],
Cell[CellGroupData[{
Cell[180774, 4561, 196, 5, 24, "Print"],
Cell[180973, 4568, 172, 4, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181194, 4578, 123, 3, 42, "Input"],
Cell[181320, 4583, 25785, 517, 1840, "Print"]
}, Open  ]],
Cell[207120, 5103, 562, 17, 61, "Text"],
Cell[CellGroupData[{
Cell[207707, 5124, 194, 5, 44, "Input"],
Cell[207904, 5131, 190, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208131, 5140, 1051, 28, 121, "Input"],
Cell[209185, 5170, 359, 8, 26, "Print"]
}, Open  ]],
Cell[209559, 5181, 1377, 43, 148, "Text"],
Cell[CellGroupData[{
Cell[210961, 5228, 1904, 55, 188, "Input"],
Cell[212868, 5285, 31933, 766, 279, "Output"]
}, Open  ]],
Cell[244816, 6054, 76651, 1261, 277, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

